{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction SudokuGridComponent_div_1_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function SudokuGridComponent_div_1_input_1_Template_input_ngModelChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const j_r5 = restoredCtx.index;\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.grid[i_r2][j_r5] = $event);\n    })(\"input\", function SudokuGridComponent_div_1_input_1_Template_input_input_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const j_r5 = restoredCtx.index;\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.validateInput($event, i_r2, j_r5));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const j_r5 = ctx.index;\n    const i_r2 = i0.ɵɵnextContext().index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.grid[i_r2][j_r5]);\n  }\n}\nfunction SudokuGridComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, SudokuGridComponent_div_1_input_1_Template, 1, 1, \"input\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r1);\n  }\n}\nexport class SudokuGridComponent {\n  constructor() {\n    this.grid = Array.from({\n      length: 9\n    }, () => Array(9).fill(''));\n  }\n  validateInput(event, row, col) {\n    const input = event.target;\n    const value = input.value;\n    if (!/^[1-9]$/.test(value)) {\n      input.value = '';\n      this.grid[row][col] = '';\n    } else {\n      this.grid[row][col] = value;\n    }\n  }\n  static {\n    this.ɵfac = function SudokuGridComponent_Factory(t) {\n      return new (t || SudokuGridComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SudokuGridComponent,\n      selectors: [[\"app-sudoku-grid\"]],\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"sudoku-grid\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [\"type\", \"text\", \"maxlength\", \"1\", \"pattern\", \"[1-9]\", 3, \"ngModel\", \"ngModelChange\", \"input\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"maxlength\", \"1\", \"pattern\", \"[1-9]\", 3, \"ngModel\", \"ngModelChange\", \"input\"]],\n      template: function SudokuGridComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, SudokuGridComponent_div_1_Template, 2, 1, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.grid);\n        }\n      },\n      dependencies: [i1.NgForOf],\n      styles: [\".sudoku-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(9, 40px);\\n  grid-template-rows: repeat(9, 40px);\\n  gap: 2px;\\n}\\n\\n.row[_ngcontent-%COMP%] {\\n  display: contents;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  text-align: center;\\n  font-size: 18px;\\n  border: 1px solid #000;\\n}\\n\\ninput[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: blue;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zdWRva3UtZ3JpZC9zdWRva3UtZ3JpZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxzQ0FBQTtFQUNBLG1DQUFBO0VBQ0EsUUFBQTtBQUNGOztBQUVBO0VBQ0UsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0Esc0JBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxrQkFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLnN1ZG9rdS1ncmlkIHtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDksIDQwcHgpO1xyXG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDksIDQwcHgpO1xyXG4gIGdhcDogMnB4O1xyXG59XHJcblxyXG4ucm93IHtcclxuICBkaXNwbGF5OiBjb250ZW50cztcclxufVxyXG5cclxuaW5wdXQge1xyXG4gIHdpZHRoOiA0MHB4O1xyXG4gIGhlaWdodDogNDBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMDA7XHJcbn1cclxuXHJcbmlucHV0OmZvY3VzIHtcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIGJvcmRlci1jb2xvcjogYmx1ZTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;IAEIA,gCAOE;IAJAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA,EAAwB;MAAA;MAAA;MAAA;MAAA;MAAA,OAGfA,uDAA2B;IAAA,EAHZ;IAH1BA,iBAOE;;;;;;IAJAA,iDAAwB;;;;;IAJ5BA,8BAAyD;IACvDA,8EAOE;IACJA,iBAAM;;;;IAPcA,eAAQ;IAARA,gCAAQ;;;ACI9B,OAAM,MAAOC,mBAAmB;EALhCC;IAME,SAAI,GAAeC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAC,CAAE,EAAE,MAAMF,KAAK,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC,EAAE,CAAC,CAAC;;EAErEC,aAAa,CAACC,KAAY,EAAEC,GAAW,EAAEC,GAAW;IAClD,MAAMC,KAAK,GAAGH,KAAK,CAACI,MAA0B;IAC9C,MAAMC,KAAK,GAAGF,KAAK,CAACE,KAAK;IAEzB,IAAI,CAAC,SAAS,CAACC,IAAI,CAACD,KAAK,CAAC,EAAE;MAC1BF,KAAK,CAACE,KAAK,GAAG,EAAE;MAChB,IAAI,CAACE,IAAI,CAACN,GAAG,CAAC,CAACC,GAAG,CAAC,GAAG,EAAE;KACzB,MAAM;MACL,IAAI,CAACK,IAAI,CAACN,GAAG,CAAC,CAACC,GAAG,CAAC,GAAGG,KAAK;;EAE/B;;;uBAbWZ,mBAAmB;IAAA;EAAA;;;YAAnBA,mBAAmB;MAAAe;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDPhCpB,8BAAyB;UACvBA,oEASM;UACRA,iBAAM;;;UAViBA,eAAS;UAATA,kCAAS","names":["i0","SudokuGridComponent","constructor","Array","from","length","fill","validateInput","event","row","col","input","target","value","test","grid","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\components\\sudoku-grid\\sudoku-grid.component.html","D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\components\\sudoku-grid\\sudoku-grid.component.ts"],"sourcesContent":["<div class=\"sudoku-grid\">\n  <div *ngFor=\"let row of grid; let i = index\" class=\"row\">\n    <input\n      *ngFor=\"let col of row; let j = index\"\n      type=\"text\"\n      [(ngModel)]=\"grid[i][j]\"\n      maxlength=\"1\"\n      pattern=\"[1-9]\"\n      (input)=\"validateInput($event, i, j)\"\n    />\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sudoku-grid',\n  templateUrl: './sudoku-grid.component.html',\n  styleUrls: ['./sudoku-grid.component.scss'],\n})\nexport class SudokuGridComponent {\n  grid: string[][] = Array.from({ length: 9 }, () => Array(9).fill(''));\n\n  validateInput(event: Event, row: number, col: number) {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n\n    if (!/^[1-9]$/.test(value)) {\n      input.value = '';\n      this.grid[row][col] = '';\n    } else {\n      this.grid[row][col] = value;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}