{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/app-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginRegisterComponent {\n  constructor(appServiceService, router) {\n    this.appServiceService = appServiceService;\n    this.router = router;\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  verifyUser() {\n    let formValue = this.loginForm.value;\n    if (formValue.username == 'Karthik Devendra Rao' && formValue.password == 'Karthik@123') {\n      alert('Login Successfully done !!');\n      this.appServiceService.userDetail = formValue;\n      this.router.navigate(['home']);\n      //this.appServiceService.loginDone.next('done');\n    } else {\n      alert('Invalid username or Password !!');\n    }\n  }\n  static {\n    this.ɵfac = function LoginRegisterComponent_Factory(t) {\n      return new (t || LoginRegisterComponent)(i0.ɵɵdirectiveInject(i1.AppServiceService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginRegisterComponent,\n      selectors: [[\"app-login-register\"]],\n      decls: 9,\n      vars: 2,\n      consts: [[1, \"login-container\"], [\"id\", \"loginForm\", 3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"username\", \"placeholder\", \"Username\", \"type\", \"text\", \"id\", \"username\", \"required\", \"\"], [\"formControlName\", \"password\", \"placeholder\", \"Password\", \"type\", \"password\", \"id\", \"password\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"], [\"id\", \"message\"]],\n      template: function LoginRegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginRegisterComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.verifyUser();\n          });\n          i0.ɵɵelement(4, \"input\", 2)(5, \"input\", 3);\n          i0.ɵɵelementStart(6, \"button\", 4);\n          i0.ɵɵtext(7, \"Login\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(8, \"p\", 5);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;AAQnE,OAAM,MAAOC,sBAAsB;EACjCC,YACUC,iBAAoC,EACpCC,MAAc;IADd,sBAAiB,GAAjBD,iBAAiB;IACjB,WAAM,GAANC,MAAM;IAEhB,cAAS,GAAG,IAAIL,SAAS,CAAC;MACxBM,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,CAAC,CAAC;MACpDC,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,CAAC;KACpD,CAAC;EAJC;EAKHE,UAAU;IACR,IAAIC,SAAS,GAAG,IAAI,CAACC,SAAS,CAACC,KAAK;IAEpC,IACEF,SAAS,CAACJ,QAAQ,IAAI,sBAAsB,IAC5CI,SAAS,CAACF,QAAQ,IAAI,aAAa,EACnC;MACAK,KAAK,CAAC,4BAA4B,CAAC;MACnC,IAAI,CAACT,iBAAiB,CAACU,UAAU,GAAGJ,SAAS;MAC7C,IAAI,CAACL,MAAM,CAACU,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;MAC9B;KACD,MAAM;MACLF,KAAK,CAAC,iCAAiC,CAAC;;EAE5C;;;uBAvBWX,sBAAsB;IAAA;EAAA;;;YAAtBA,sBAAsB;MAAAc;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCTnCC,8BAA6B;UACvBA,qBAAK;UAAAA,iBAAK;UACdA,+BAAuE;UAA1BA;YAAA,OAAYC,gBAAY;UAAA,EAAC;UAEpED,2BAME;UAWFA,iCAAqD;UAAAA,qBAAK;UAAAA,iBAAS;UAErEA,uBAAoB;UACtBA,iBAAM;;;UAtBEA,eAAuB;UAAvBA,yCAAuB;UAmBLA,eAA8B;UAA9BA,gDAA8B","names":["FormControl","FormGroup","Validators","LoginRegisterComponent","constructor","appServiceService","router","username","required","password","verifyUser","formValue","loginForm","value","alert","userDetail","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\components\\login-register\\login-register.component.ts","D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\components\\login-register\\login-register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AppServiceService } from 'src/app/service/app-service.service';\n@Component({\n  selector: 'app-login-register',\n  templateUrl: './login-register.component.html',\n  styleUrls: ['./login-register.component.scss'],\n})\nexport class LoginRegisterComponent {\n  constructor(\n    private appServiceService: AppServiceService,\n    private router: Router\n  ) {}\n  loginForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  });\n  verifyUser() {\n    let formValue = this.loginForm.value;\n\n    if (\n      formValue.username == 'Karthik Devendra Rao' &&\n      formValue.password == 'Karthik@123'\n    ) {\n      alert('Login Successfully done !!');\n      this.appServiceService.userDetail = formValue;\n      this.router.navigate(['home']);\n      //this.appServiceService.loginDone.next('done');\n    } else {\n      alert('Invalid username or Password !!');\n    }\n  }\n}\n","<div class=\"login-container\">\n  <h2>Login</h2>\n  <form [formGroup]=\"loginForm\" id=\"loginForm\" (ngSubmit)=\"verifyUser()\">\n    <!-- <label for=\"username\">Username:</label> -->\n    <input\n      formControlName=\"username\"\n      placeholder=\"Username\"\n      type=\"text\"\n      id=\"username\"\n      required\n    />\n\n    <!-- <label for=\"password\">Password:</label> -->\n    <input\n      formControlName=\"password\"\n      placeholder=\"Password\"\n      type=\"password\"\n      id=\"password\"\n      required\n    />\n\n    <button type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\n  </form>\n  <p id=\"message\"></p>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}