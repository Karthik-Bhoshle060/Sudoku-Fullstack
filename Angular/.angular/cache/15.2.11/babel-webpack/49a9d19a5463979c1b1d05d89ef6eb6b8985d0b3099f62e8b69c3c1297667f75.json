{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/sudoku-generator.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./components/sudoku-grid/sudoku-grid.component\";\nexport class AppComponent {\n  constructor(sudokuGeneratorService) {\n    this.sudokuGeneratorService = sudokuGeneratorService;\n  }\n  ngOnInit() {\n    this.sudokugrid = this.sudokuGeneratorService.generateSudoku();\n  }\n  generatenewSudoku() {\n    this.sudokugrid = this.sudokuGeneratorService.generateSudoku();\n  }\n  printOutput(result) {\n    alert(result);\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.SudokuGeneratorService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 2,\n      vars: 1,\n      consts: [[3, \"grid\", \"VerifyPuzzle\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"app-sudoku-grid\", 0);\n          i0.ɵɵlistener(\"VerifyPuzzle\", function AppComponent_Template_app_sudoku_grid_VerifyPuzzle_0_listener($event) {\n            return ctx.printOutput($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(1, \"router-outlet\");\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"grid\", ctx.sudokugrid);\n        }\n      },\n      dependencies: [i2.RouterOutlet, i3.SudokuGridComponent],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,sBAA8C;IAA9C,2BAAsB,GAAtBA,sBAAsB;EAA2B;EACrEC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,sBAAsB,CAACG,cAAc,EAAE;EAChE;EACAC,iBAAiB;IACf,IAAI,CAACF,UAAU,GAAG,IAAI,CAACF,sBAAsB,CAACG,cAAc,EAAE;EAChE;EACAE,WAAW,CAACC,MAAW;IACrBC,KAAK,CAACD,MAAM,CAAC;EACf;;;uBAXWR,YAAY;IAAA;EAAA;;;YAAZA,YAAY;MAAAU;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCRzBC,0CAGC;UADCA;YAAA,OAAgBC,uBAAmB;UAAA,EAAC;UACrCD,iBAAkB;UACnBA,gCAA+B;;;UAH7BA,qCAAmB","names":["AppComponent","constructor","sudokuGeneratorService","ngOnInit","sudokugrid","generateSudoku","generatenewSudoku","printOutput","result","alert","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\app.component.ts","D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SudokuGeneratorService } from './service/sudoku-generator.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  sudokugrid: any;\n  constructor(private sudokuGeneratorService: SudokuGeneratorService) {}\n  ngOnInit() {\n    this.sudokugrid = this.sudokuGeneratorService.generateSudoku();\n  }\n  generatenewSudoku() {\n    this.sudokugrid = this.sudokuGeneratorService.generateSudoku();\n  }\n  printOutput(result: any) {\n    alert(result);\n  }\n}\n","<app-sudoku-grid\n  [grid]=\"sudokugrid\"\n  (VerifyPuzzle)=\"printOutput($event)\"\n></app-sudoku-grid>\n<router-outlet></router-outlet>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}