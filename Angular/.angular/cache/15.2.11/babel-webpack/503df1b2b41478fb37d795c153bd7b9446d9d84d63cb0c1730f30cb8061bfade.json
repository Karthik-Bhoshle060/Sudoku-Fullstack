{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../app-service.service\";\nexport class AuthGuard {\n  constructor(router, appServiceService) {\n    this.router = router;\n    this.appServiceService = appServiceService;\n  }\n  canMatch(route, segments) {\n    const isLoggedIn = this.appServiceService.userDetail.username; // Replace with real logic\n    if (!isLoggedIn) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AppServiceService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EACpBC,YACUC,MAAc,EACdC,iBAAoC;IADpC,WAAM,GAAND,MAAM;IACN,sBAAiB,GAAjBC,iBAAiB;EACxB;EACHC,QAAQ,CACNC,KAAY,EACZC,QAAsB;IAMtB,MAAMC,UAAU,GAAG,IAAI,CAACJ,iBAAiB,CAACK,UAAU,CAACC,QAAQ,CAAC,CAAC;IAE/D,IAAI,CAACF,UAAU,EAAE;MACf,IAAI,CAACL,MAAM,CAACQ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;;;uBApBWV,SAAS;IAAA;EAAA;;;aAATA,SAAS;MAAAW,SAATX,SAAS;MAAAY,YAFR;IAAM;EAAA","names":["AuthGuard","constructor","router","appServiceService","canMatch","route","segments","isLoggedIn","userDetail","username","navigate","factory","providedIn"],"sourceRoot":"","sources":["D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\service\\auth\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanMatch, Route, Router, UrlSegment, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AppServiceService } from '../app-service.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanMatch {\n  constructor(\n    private router: Router,\n    private appServiceService: AppServiceService\n  ) {}\n  canMatch(\n    route: Route,\n    segments: UrlSegment[]\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    const isLoggedIn = this.appServiceService.userDetail.username; // Replace with real logic\n\n    if (!isLoggedIn) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}