{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { interval } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/sudoku-generator.service\";\nimport * as i2 from \"src/app/service/app-service.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a0, a1) {\n  return {\n    \"selcted-value\": a0,\n    \"wrong-selection\": a1\n  };\n};\nfunction SudokuGridComponent_div_8_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function SudokuGridComponent_div_8_input_1_Template_input_ngModelChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const j_r8 = restoredCtx.index;\n      const i_r5 = i0.ɵɵnextContext().index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.answergrid[i_r5][j_r8] = $event);\n    })(\"click\", function SudokuGridComponent_div_8_input_1_Template_input_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const j_r8 = restoredCtx.index;\n      const i_r5 = i0.ɵɵnextContext().index;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.SelectedValue(i_r5, j_r8));\n    })(\"input\", function SudokuGridComponent_div_8_input_1_Template_input_input_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const j_r8 = restoredCtx.index;\n      const i_r5 = i0.ɵɵnextContext().index;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.validateInput($event, i_r5, j_r8));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const j_r8 = ctx.index;\n    const i_r5 = i0.ɵɵnextContext().index;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.answergrid[i_r5][j_r8])(\"ngClass\", i0.ɵɵpureFunction2(3, _c0, ctx_r6.selectedValue && ctx_r6.selectedValue == ctx_r6.answergrid[i_r5][j_r8], ctx_r6.wrongSelection && i_r5 == ctx_r6.selectedRow && j_r8 == ctx_r6.selectedCol))(\"readonly\", true);\n  }\n}\nfunction SudokuGridComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, SudokuGridComponent_div_8_input_1_Template, 1, 6, \"input\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r4);\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"hide-number\": a0,\n    \"disable-selection\": a1\n  };\n};\nfunction SudokuGridComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵlistener(\"click\", function SudokuGridComponent_div_11_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const i_r18 = restoredCtx.index;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.addValue(i_r18 + 1));\n    });\n    i0.ɵɵelementStart(1, \"span\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r17 = ctx.$implicit;\n    const i_r18 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c1, 9 - row_r17.count == 0, !ctx_r1.enableValueCount));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i_r18 + 1, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", 9 - row_r17.count, \" \");\n  }\n}\nfunction SudokuGridComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14)(2, \"span\", 15);\n    i0.ɵɵtext(3, \"Game Over\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"You lost the game because you made 3 mistakes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function SudokuGridComponent_div_12_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.secondChance());\n    });\n    i0.ɵɵtext(7, \"Second Chance\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 17)(9, \"div\")(10, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function SudokuGridComponent_div_12_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.newGame());\n    });\n    i0.ɵɵtext(11, \"New Game\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\")(13, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function SudokuGridComponent_div_12_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.restart());\n    });\n    i0.ɵɵtext(14, \"Restart\");\n    i0.ɵɵelementEnd()()()()();\n  }\n}\nfunction SudokuGridComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 14)(2, \"h2\");\n    i0.ɵɵtext(3, \"\\uD83C\\uDF89 Puzzle Completed!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 19)(5, \"p\")(6, \"strong\");\n    i0.ɵɵtext(7, \"\\uD83D\\uDD52 Your Time:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\")(10, \"strong\");\n    i0.ɵɵtext(11, \"\\u2B50 Your Score:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\")(14, \"strong\");\n    i0.ɵɵtext(15, \"\\uD83C\\uDFC6 Best Time:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 17)(18, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function SudokuGridComponent_div_13_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.newGame());\n    });\n    i0.ɵɵtext(19, \"New Game\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function SudokuGridComponent_div_13_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.gotoProfile());\n    });\n    i0.ɵɵtext(21, \"Profile\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.formattedTime, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.scoreCount, \" Points\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\" \", \"10:20\", \" by \", \"Karthik\", \"\");\n  }\n}\nexport class SudokuGridComponent {\n  constructor(sudokuGeneratorService, appServiceService, router) {\n    this.sudokuGeneratorService = sudokuGeneratorService;\n    this.appServiceService = appServiceService;\n    this.router = router;\n    //grid: any[][];\n    this.grid = [];\n    this.VerifyPuzzle = new EventEmitter();\n    this.answergrid = [];\n    this.selectedValue = null;\n    this.enableValueCount = false;\n    this.selectedRow = null;\n    this.selectedCol = null;\n    this.wrongSelection = false;\n    this.scoreCount = 0;\n    this.mistakeCount = 0;\n    this.valueCount = [{\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }];\n    this.seconds = 0;\n    this.gameCompleted = false;\n    // this.grid = this.sudokuGeneratorService.generateSudoku();\n  }\n\n  ngOnInit() {\n    this.startNewgame();\n    this.startTimer();\n  }\n  startNewgame() {\n    this.answergrid = structuredClone(this.sudokuGeneratorService.generatePuzzleWith25Clues(this.grid));\n    this.updateCounter();\n  }\n  secondChance() {\n    this.mistakeCount = 2;\n    this.startTimer();\n  }\n  newGame() {\n    this.reset();\n    this.startNewgame();\n  }\n  restart() {\n    this.reset();\n    this.grid = this.sudokuGeneratorService.printSudoku();\n    this.answergrid = structuredClone(this.sudokuGeneratorService.answergrid);\n    this.startTimer();\n  }\n  validateInput(event, row, col) {\n    const input = event.target;\n    const value = input.value;\n    if (!/^[1-9]$/.test(value)) {\n      input.value = '';\n      this.answergrid[row][col] = '';\n    } else {\n      this.answergrid[row][col] = value;\n    }\n    this.updateCounter();\n  }\n  comparetheGrid() {\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (this.answergrid[i][j] != this.grid[i][j]) return false;\n      }\n    }\n    return true;\n  }\n  Validate() {\n    let p = this.comparetheGrid();\n    this.gameCompleted = p;\n    this.VerifyPuzzle.emit(p);\n  }\n  reset() {\n    this.answergrid = [];\n    this.selectedValue = null;\n    this.enableValueCount = false;\n    this.selectedRow = null;\n    this.selectedCol = null;\n    this.wrongSelection = false;\n    this.scoreCount = 0;\n    this.mistakeCount = 0;\n    this.resetTimer();\n    this.valueCount = [{\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }];\n  }\n  SelectedValue(i, j) {\n    if (this.wrongSelection) {\n      this.selectedValue = this.answergrid[i][j];\n      if (!(this.selectedRow == i && this.selectedCol == j)) {\n        this.enableValueCount = false;\n        return;\n      }\n    }\n    if (this.checkType(this.answergrid[i][j])) {\n      this.selectedValue = this.answergrid[i][j];\n      this.enableValueCount = false;\n      return;\n    }\n    if (this.answergrid[i][j] != '') {\n      this.selectedRow = i;\n      this.selectedCol = j;\n      this.selectedValue = this.wrongSelection ? null : this.answergrid[i][j];\n      this.enableValueCount = true;\n    } else {\n      this.selectedValue = null;\n      this.selectedRow = i;\n      this.selectedCol = j;\n      this.enableValueCount = true;\n    }\n  }\n  checkAllFilled() {\n    const allFilled = this.answergrid.some(row => row.some(cell => cell == ''));\n    if (!allFilled) {\n      this.appServiceService.isUserPlayingGame = false;\n      this.stopTimer();\n      this.Validate();\n    }\n  }\n  gotoProfile() {\n    this.router.navigate(['profile']);\n  }\n  addValue(value) {\n    let i = this.selectedRow;\n    let j = this.selectedCol;\n    this.answergrid[i][j] = String(value);\n    if (i == null && j == null) return;\n    if (this.answergrid[i][j] != this.grid[i][j]) {\n      // this.selectedValue = null;\n      this.wrongSelection = true;\n      this.mistakeCount++;\n      if (this.mistakeCount == 3) {\n        this.stopTimer();\n      }\n      this.updateCounter();\n    } else {\n      this.enableValueCount = false;\n      this.selectedCol = null;\n      this.selectedRow = null;\n      this.selectedValue = String(value);\n      this.wrongSelection = false;\n      this.scoreCount += 50;\n      this.updateCounter();\n      this.checkAllFilled();\n    }\n  }\n  checkType(value) {\n    return typeof value == 'number';\n  }\n  updateCounter() {\n    let count = 0;\n    for (let i = 0; i < this.valueCount.length; i++) {\n      let count = 0;\n      for (let row of this.answergrid) {\n        for (let num of row) {\n          if (num == i + 1) {\n            count++;\n          }\n        }\n      }\n      this.valueCount[i].count = count;\n    }\n    // return count;\n  }\n\n  startTimer() {\n    if (!this.timerSubscription || this.timerSubscription.closed) {\n      this.timerSubscription = interval(1000).subscribe(() => {\n        this.seconds++;\n      });\n    }\n  }\n  stopTimer() {\n    this.timerSubscription?.unsubscribe();\n  }\n  resetTimer() {\n    this.stopTimer();\n    this.seconds = 0;\n  }\n  get formattedTime() {\n    const min = Math.floor(this.seconds / 60).toString().padStart(2, '0');\n    const sec = (this.seconds % 60).toString().padStart(2, '0');\n    return `${min}:${sec}`;\n  }\n  ngOnDestroy() {\n    this.stopTimer(); // Clean up when component is destroyed\n  }\n\n  static {\n    this.ɵfac = function SudokuGridComponent_Factory(t) {\n      return new (t || SudokuGridComponent)(i0.ɵɵdirectiveInject(i1.SudokuGeneratorService), i0.ɵɵdirectiveInject(i2.AppServiceService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SudokuGridComponent,\n      selectors: [[\"app-sudoku-grid\"]],\n      inputs: {\n        grid: \"grid\"\n      },\n      outputs: {\n        VerifyPuzzle: \"VerifyPuzzle\"\n      },\n      decls: 14,\n      vars: 7,\n      consts: [[1, \"message-section\"], [1, \"sudoku-grid\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [1, \"counter-container\"], [1, \"sudoku-value-grid\"], [\"class\", \"value-row\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"myPopup\", \"class\", \"popup\", 4, \"ngIf\"], [\"class\", \"popup-container\", 4, \"ngIf\"], [1, \"row\"], [\"type\", \"text\", \"maxlength\", \"1\", \"pattern\", \"[1-9]\", 3, \"ngModel\", \"ngClass\", \"readonly\", \"ngModelChange\", \"click\", \"input\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"maxlength\", \"1\", \"pattern\", \"[1-9]\", 3, \"ngModel\", \"ngClass\", \"readonly\", \"ngModelChange\", \"click\", \"input\"], [1, \"value-row\", 3, \"ngClass\", \"click\"], [1, \"number\"], [\"id\", \"myPopup\", 1, \"popup\"], [1, \"popup-content\"], [1, \"heading\"], [1, \"btn\", 3, \"click\"], [1, \"actions\"], [1, \"popup-container\"], [1, \"stats\"], [3, \"click\"]],\n      template: function SudokuGridComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"span\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"span\");\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"span\");\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 1);\n          i0.ɵɵtemplate(8, SudokuGridComponent_div_8_Template, 2, 1, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 3)(10, \"div\", 4);\n          i0.ɵɵtemplate(11, SudokuGridComponent_div_11_Template, 5, 6, \"div\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(12, SudokuGridComponent_div_12_Template, 15, 0, \"div\", 6);\n          i0.ɵɵtemplate(13, SudokuGridComponent_div_13_Template, 22, 4, \"div\", 7);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Mistakes: \", ctx.mistakeCount, \"/3 \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Score: \", ctx.scoreCount, \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Time: \", ctx.formattedTime, \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.grid);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.valueCount);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.mistakeCount == 3);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.gameCompleted);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.MaxLengthValidator, i5.PatternValidator, i5.NgModel],\n      styles: [\".sudoku-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(9, 40px);\\n  grid-template-rows: repeat(9, 40px);\\n  gap: 2px;\\n  justify-content: center;\\n}\\n.sudoku-grid[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%] {\\n  display: contents;\\n}\\n.sudoku-grid[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  text-align: center;\\n  font-size: 18px;\\n  border: 1px solid grey; \\n}\\n.sudoku-grid[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  background-color: #e1fbf6;\\n}\\n.sudoku-grid[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   input.selcted-value[_ngcontent-%COMP%] {\\n  background-color: #c6e2eb;\\n}\\n.sudoku-grid[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   input.wrong-selection[_ngcontent-%COMP%] {\\n  background-color: red;\\n}\\n.sudoku-grid[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   input.disabled-value[_ngcontent-%COMP%] {\\n  pointer-events: none;\\n}\\n\\n.sudoku-value-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(9, 50px);\\n  grid-template-rows: repeat(1, 50px);\\n  gap: 5px;\\n  justify-content: center;\\n  margin-top: 15px;\\n  text-align: center;\\n}\\n.sudoku-value-grid[_ngcontent-%COMP%]   .value-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  border: 1px solid grey;\\n  border-radius: 4px;\\n  padding: 5px 0px;\\n  background-color: #e1fbf6;\\n}\\n.sudoku-value-grid[_ngcontent-%COMP%]   .value-row.hide-number[_ngcontent-%COMP%] {\\n  visibility: hidden;\\n}\\n.sudoku-value-grid[_ngcontent-%COMP%]   .value-row.disable-selection[_ngcontent-%COMP%] {\\n  cursor: none;\\n  pointer-events: none;\\n  background-color: white;\\n}\\n.sudoku-value-grid[_ngcontent-%COMP%]   .value-row[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n}\\n.sudoku-value-grid[_ngcontent-%COMP%]   .value-row[_ngcontent-%COMP%]   span.number[_ngcontent-%COMP%] {\\n  font-size: 18px;\\n  font-weight: 600;\\n}\\n\\n.message-section[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  width: 380px;\\n  margin: auto;\\n  padding: 5px;\\n}\\n.message-section[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  width: 33%;\\n  justify-content: center;\\n  display: flex;\\n}\\n\\n.popup[_ngcontent-%COMP%] {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background: rgba(0, 0, 0, 0.5); \\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  \\n}\\n.popup[_ngcontent-%COMP%]   .popup-content[_ngcontent-%COMP%] {\\n  background: #fff;\\n  padding: 20px;\\n  border-radius: 10px;\\n  width: 300px;\\n  text-align: center;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);\\n  \\n}\\n.popup[_ngcontent-%COMP%]   .popup-content[_ngcontent-%COMP%]   .heading[_ngcontent-%COMP%] {\\n  font-size: 25px;\\n}\\n.popup[_ngcontent-%COMP%]   .popup-content[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  margin-top: 10px;\\n  padding: 8px 16px;\\n  background: #e74c3c;\\n  color: white;\\n  border: none;\\n  text-decoration: none;\\n  border-radius: 5px;\\n}\\n.popup[_ngcontent-%COMP%]   .popup-content[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]:hover {\\n  background: #c0392b;\\n}\\n.popup[_ngcontent-%COMP%]   .popup-content[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] {\\n  display: flex;\\n}\\n.popup[_ngcontent-%COMP%]   .popup-content[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  width: 50%;\\n}\\n\\n.popup-container[_ngcontent-%COMP%] {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background: rgba(0, 0, 0, 0.5); \\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  z-index: 999;\\n}\\n.popup-container[_ngcontent-%COMP%]   .popup-content[_ngcontent-%COMP%] {\\n  background: #fff;\\n  padding: 20px;\\n  border-radius: 10px;\\n  width: 300px;\\n  text-align: center;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);\\n}\\n.popup-container[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  background: #fff;\\n  padding: 15px 20px;\\n  border-radius: 12px;\\n  text-align: center;\\n  max-width: 400px;\\n  width: 90%;\\n}\\n.popup-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  color: #4caf50;\\n  margin: 10px;\\n}\\n.popup-container[_ngcontent-%COMP%]   .stats[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin: 10px 0;\\n  font-size: 16px;\\n  color: #444;\\n}\\n.popup-container[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n.popup-container[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  margin: 0 10px;\\n  padding: 10px 20px;\\n  border: none;\\n  border-radius: 6px;\\n  background-color: #4caf50;\\n  color: white;\\n  font-size: 14px;\\n  cursor: pointer;\\n  transition: background-color 0.2s ease;\\n}\\n.popup-container[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #388e3c;\\n}\\n\\n\\n.sudoku-grid[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(3n+1)   input[_ngcontent-%COMP%] {\\n  border-top: 3px solid #000;\\n}\\n\\n.sudoku-grid[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:last-child   input[_ngcontent-%COMP%] {\\n  border-bottom: 3px solid #000 !important;\\n}\\n\\ninput[_ngcontent-%COMP%]:nth-child(3n+1) {\\n  border-left: 3px solid black !important;\\n}\\n\\ninput[_ngcontent-%COMP%]:last-child {\\n  border-right: 3px solid black !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","interval","i0","SudokuGridComponent","constructor","sudokuGeneratorService","appServiceService","router","count","ngOnInit","startNewgame","startTimer","answergrid","structuredClone","generatePuzzleWith25Clues","grid","updateCounter","secondChance","mistakeCount","newGame","reset","restart","printSudoku","validateInput","event","row","col","input","target","value","test","comparetheGrid","i","j","Validate","p","gameCompleted","VerifyPuzzle","emit","selectedValue","enableValueCount","selectedRow","selectedCol","wrongSelection","scoreCount","resetTimer","valueCount","SelectedValue","checkType","checkAllFilled","allFilled","some","cell","isUserPlayingGame","stopTimer","gotoProfile","navigate","addValue","String","length","num","timerSubscription","closed","subscribe","seconds","unsubscribe","formattedTime","min","Math","floor","toString","padStart","sec","ngOnDestroy","selectors","inputs","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\components\\sudoku-grid\\sudoku-grid.component.ts","D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\components\\sudoku-grid\\sudoku-grid.component.html"],"sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  OnDestroy,\n} from '@angular/core';\nimport { SudokuGeneratorService } from 'src/app/service/sudoku-generator.service';\nimport { interval, Subscription } from 'rxjs';\nimport { AppServiceService } from 'src/app/service/app-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sudoku-grid',\n  templateUrl: './sudoku-grid.component.html',\n  styleUrls: ['./sudoku-grid.component.scss'],\n})\nexport class SudokuGridComponent implements OnInit, OnDestroy {\n  //grid: any[][];\n  @Input() grid: any[][] = [];\n  @Output() VerifyPuzzle = new EventEmitter<any>();\n  answergrid: any[] = [];\n  selectedValue: any = null;\n  enableValueCount: boolean = false;\n  selectedRow: any = null;\n  selectedCol: any = null;\n  wrongSelection: boolean = false;\n  scoreCount = 0;\n  mistakeCount = 0;\n  valueCount: any[] = [\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n  ];\n  seconds: number = 0;\n  private timerSubscription?: Subscription;\n  gameCompleted: boolean = false;\n\n  constructor(\n    private sudokuGeneratorService: SudokuGeneratorService,\n    private appServiceService: AppServiceService,\n    private router: Router\n  ) {\n    // this.grid = this.sudokuGeneratorService.generateSudoku();\n  }\n  ngOnInit() {\n    this.startNewgame();\n    this.startTimer();\n  }\n  startNewgame() {\n    this.answergrid = structuredClone(\n      this.sudokuGeneratorService.generatePuzzleWith25Clues(this.grid)\n    );\n    this.updateCounter();\n  }\n  secondChance() {\n    this.mistakeCount = 2;\n    this.startTimer();\n  }\n  newGame() {\n    this.reset();\n    this.startNewgame();\n  }\n  restart() {\n    this.reset();\n    this.grid = this.sudokuGeneratorService.printSudoku();\n    this.answergrid = structuredClone(this.sudokuGeneratorService.answergrid);\n    this.startTimer();\n  }\n\n  validateInput(event: Event, row: number, col: number) {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n\n    if (!/^[1-9]$/.test(value)) {\n      input.value = '';\n      this.answergrid[row][col] = '';\n    } else {\n      this.answergrid[row][col] = value;\n    }\n    this.updateCounter();\n  }\n  comparetheGrid() {\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (this.answergrid[i][j] != this.grid[i][j]) return false;\n      }\n    }\n    return true;\n  }\n  Validate() {\n    let p = this.comparetheGrid();\n    this.gameCompleted = p;\n    this.VerifyPuzzle.emit(p);\n  }\n  reset() {\n    this.answergrid = [];\n    this.selectedValue = null;\n    this.enableValueCount = false;\n    this.selectedRow = null;\n    this.selectedCol = null;\n    this.wrongSelection = false;\n    this.scoreCount = 0;\n    this.mistakeCount = 0;\n    this.resetTimer();\n    this.valueCount = [\n      { count: 0 },\n      { count: 0 },\n      { count: 0 },\n      { count: 0 },\n      { count: 0 },\n      { count: 0 },\n      { count: 0 },\n      { count: 0 },\n      { count: 0 },\n    ];\n  }\n  SelectedValue(i: any, j: any) {\n    if (this.wrongSelection) {\n      this.selectedValue = this.answergrid[i][j];\n      if (!(this.selectedRow == i && this.selectedCol == j)) {\n        this.enableValueCount = false;\n        return;\n      }\n    }\n    if (this.checkType(this.answergrid[i][j])) {\n      this.selectedValue = this.answergrid[i][j];\n      this.enableValueCount = false;\n      return;\n    }\n    if (this.answergrid[i][j] != '') {\n      this.selectedRow = i;\n      this.selectedCol = j;\n      this.selectedValue = this.wrongSelection ? null : this.answergrid[i][j];\n      this.enableValueCount = true;\n    } else {\n      this.selectedValue = null;\n      this.selectedRow = i;\n      this.selectedCol = j;\n      this.enableValueCount = true;\n    }\n  }\n  checkAllFilled() {\n    const allFilled = this.answergrid.some((row) =>\n      row.some((cell: any) => cell == '')\n    );\n    if (!allFilled) {\n      this.appServiceService.isUserPlayingGame = false;\n      this.stopTimer();\n      this.Validate();\n    }\n  }\n  gotoProfile() {\n    this.router.navigate(['profile']);\n  }\n  addValue(value: any) {\n    let i = this.selectedRow;\n    let j = this.selectedCol;\n    this.answergrid[i][j] = String(value);\n    if (i == null && j == null) return;\n    if (this.answergrid[i][j] != this.grid[i][j]) {\n      // this.selectedValue = null;\n      this.wrongSelection = true;\n      this.mistakeCount++;\n      if (this.mistakeCount == 3) {\n        this.stopTimer();\n      }\n      this.updateCounter();\n    } else {\n      this.enableValueCount = false;\n      this.selectedCol = null;\n      this.selectedRow = null;\n      this.selectedValue = String(value);\n      this.wrongSelection = false;\n      this.scoreCount += 50;\n      this.updateCounter();\n      this.checkAllFilled();\n    }\n  }\n  checkType(value: any) {\n    return typeof value == 'number';\n  }\n  updateCounter() {\n    let count = 0;\n    for (let i = 0; i < this.valueCount.length; i++) {\n      let count = 0;\n      for (let row of this.answergrid) {\n        for (let num of row) {\n          if (num == i + 1) {\n            count++;\n          }\n        }\n      }\n      this.valueCount[i].count = count;\n    }\n\n    // return count;\n  }\n  startTimer() {\n    if (!this.timerSubscription || this.timerSubscription.closed) {\n      this.timerSubscription = interval(1000).subscribe(() => {\n        this.seconds++;\n      });\n    }\n  }\n\n  stopTimer() {\n    this.timerSubscription?.unsubscribe();\n  }\n\n  resetTimer() {\n    this.stopTimer();\n    this.seconds = 0;\n  }\n  get formattedTime(): string {\n    const min = Math.floor(this.seconds / 60)\n      .toString()\n      .padStart(2, '0');\n    const sec = (this.seconds % 60).toString().padStart(2, '0');\n    return `${min}:${sec}`;\n  }\n\n  ngOnDestroy() {\n    this.stopTimer(); // Clean up when component is destroyed\n  }\n}\n","<div class=\"message-section\">\n  <span>Mistakes: {{ mistakeCount }}/3 </span>\n  <span>Score: {{ scoreCount }} </span>\n  <span>Time: {{ formattedTime }} </span>\n</div>\n<div class=\"sudoku-grid\">\n  <div *ngFor=\"let row of grid; let i = index\" class=\"row\">\n    <input\n      *ngFor=\"let col of row; let j = index\"\n      type=\"text\"\n      [(ngModel)]=\"answergrid[i][j]\"\n      [ngClass]=\"{\n        'selcted-value': selectedValue && selectedValue == answergrid[i][j],\n        'wrong-selection':\n          wrongSelection && i == selectedRow && j == selectedCol\n      }\"\n      maxlength=\"1\"\n      pattern=\"[1-9]\"\n      (click)=\"SelectedValue(i, j)\"\n      (input)=\"validateInput($event, i, j)\"\n      [readonly]=\"true\"\n    />\n    <!-- [readonly]=\"checkType(answergrid[i][j])\"\n    /> -->\n  </div>\n</div>\n<div class=\"counter-container\">\n  <div class=\"sudoku-value-grid\">\n    <div\n      *ngFor=\"let row of valueCount; let i = index\"\n      class=\"value-row\"\n      [ngClass]=\"{\n        'hide-number': 9 - row.count == 0,\n        'disable-selection': !enableValueCount\n      }\"\n      (click)=\"addValue(i + 1)\"\n    >\n      <span class=\"number\">\n        {{ i + 1 }}\n      </span>\n      <span>\n        {{ 9 - row.count }}\n      </span>\n    </div>\n  </div>\n</div>\n<div id=\"myPopup\" class=\"popup\" *ngIf=\"mistakeCount == 3\">\n  <div class=\"popup-content\">\n    <span class=\"heading\">Game Over</span>\n    <p>You lost the game because you made 3 mistakes</p>\n    <button class=\"btn\" (click)=\"secondChance()\">Second Chance</button>\n    <div class=\"actions\">\n      <div>\n        <button class=\"btn\" (click)=\"newGame()\">New Game</button>\n      </div>\n      <div>\n        <button class=\"btn\" (click)=\"restart()\">Restart</button>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"popup-container\" *ngIf=\"gameCompleted\">\n  <div class=\"popup-content\">\n    <h2>🎉 Puzzle Completed!</h2>\n\n    <div class=\"stats\">\n      <p><strong>🕒 Your Time:</strong> {{ formattedTime }}</p>\n      <p><strong>⭐ Your Score:</strong> {{ scoreCount }} Points</p>\n      <p><strong>🏆 Best Time:</strong> {{ \"10:20\" }} by {{ \"Karthik\" }}</p>\n    </div>\n\n    <div class=\"actions\">\n      <button (click)=\"newGame()\">New Game</button>\n      <button (click)=\"gotoProfile()\">Profile</button>\n    </div>\n  </div>\n</div>\n\n<!-- <button class=\"verify-button\" (click)=\"Validate()\">Verify Suduku</button> -->\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}