{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/sudoku-generator.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function (a0, a1) {\n  return {\n    \"selcted-value\": a0,\n    \"wrong-selection\": a1\n  };\n};\nfunction SudokuGridComponent_div_8_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function SudokuGridComponent_div_8_input_1_Template_input_ngModelChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const j_r7 = restoredCtx.index;\n      const i_r4 = i0.ɵɵnextContext().index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.answergrid[i_r4][j_r7] = $event);\n    })(\"click\", function SudokuGridComponent_div_8_input_1_Template_input_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const j_r7 = restoredCtx.index;\n      const i_r4 = i0.ɵɵnextContext().index;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.SelectedValue(i_r4, j_r7));\n    })(\"input\", function SudokuGridComponent_div_8_input_1_Template_input_input_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const j_r7 = restoredCtx.index;\n      const i_r4 = i0.ɵɵnextContext().index;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.validateInput($event, i_r4, j_r7));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const j_r7 = ctx.index;\n    const i_r4 = i0.ɵɵnextContext().index;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.answergrid[i_r4][j_r7])(\"ngClass\", i0.ɵɵpureFunction2(3, _c0, ctx_r5.selectedValue == ctx_r5.answergrid[i_r4][j_r7], ctx_r5.wrongSelection && i_r4 == ctx_r5.selectedRow && j_r7 == ctx_r5.selectedCol))(\"readonly\", true);\n  }\n}\nfunction SudokuGridComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, SudokuGridComponent_div_8_input_1_Template, 1, 6, \"input\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r3);\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"hide-number\": a0,\n    \"disable-selection\": a1\n  };\n};\nfunction SudokuGridComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵlistener(\"click\", function SudokuGridComponent_div_11_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const i_r17 = restoredCtx.index;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.addValue(i_r17 + 1));\n    });\n    i0.ɵɵelementStart(1, \"span\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r16 = ctx.$implicit;\n    const i_r17 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c1, 9 - row_r16.count == 0, !ctx_r1.enableValueCount));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i_r17 + 1, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", 9 - row_r16.count, \" \");\n  }\n}\nfunction SudokuGridComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14)(2, \"span\", 15);\n    i0.ɵɵtext(3, \"Game Over\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"You lost the game because you made 3 mistakes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function SudokuGridComponent_div_12_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.secondChance());\n    });\n    i0.ɵɵtext(7, \"Second Chance\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 17)(9, \"div\")(10, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function SudokuGridComponent_div_12_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.newGame());\n    });\n    i0.ɵɵtext(11, \"New Game\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\")(13, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function SudokuGridComponent_div_12_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.restart());\n    });\n    i0.ɵɵtext(14, \"Restart\");\n    i0.ɵɵelementEnd()()()()();\n  }\n}\nexport class SudokuGridComponent {\n  constructor(sudokuGeneratorService) {\n    this.sudokuGeneratorService = sudokuGeneratorService;\n    //grid: any[][];\n    this.grid = [];\n    this.VerifyPuzzle = new EventEmitter();\n    this.answergrid = [];\n    this.selectedValue = null;\n    this.enableValueCount = false;\n    this.selectedRow = null;\n    this.selectedCol = null;\n    this.wrongSelection = false;\n    this.scoreCount = 0;\n    this.mistakeCount = 0;\n    this.valueCount = [{\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }];\n    // this.grid = this.sudokuGeneratorService.generateSudoku();\n  }\n\n  ngOnInit() {\n    this.answergrid = this.sudokuGeneratorService.generatePuzzleWith25Clues(this.grid);\n    this.updateCounter();\n  }\n  secondChance() {\n    this.mistakeCount = 2;\n  }\n  newGame() {\n    this.mistakeCount = 0;\n  }\n  restart() {\n    this.mistakeCount = 0;\n  }\n  validateInput(event, row, col) {\n    const input = event.target;\n    const value = input.value;\n    if (!/^[1-9]$/.test(value)) {\n      input.value = '';\n      this.answergrid[row][col] = '';\n    } else {\n      this.answergrid[row][col] = value;\n    }\n    this.updateCounter();\n  }\n  comparetheGrid() {\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (this.answergrid[i][j] != this.grid[i][j]) return false;\n      }\n    }\n    return true;\n  }\n  Validate() {\n    this.VerifyPuzzle.emit(this.comparetheGrid());\n  }\n  SelectedValue(i, j) {\n    // if (\n    //   this.wrongSelection ||\n    //   (this.selectedRow &&\n    //     this.selectedCol &&\n    //     this.selectedRow != i &&\n    //     this.selectedCol != j)\n    // ) {\n    //   this.enableValueCount = false;\n    //   return;\n    // }\n    if (this.wrongSelection) {\n      if (this.selectedRow != i && this.selectedCol != j) {\n        this.enableValueCount = false;\n        return;\n      }\n    }\n    if (this.checkType(this.answergrid[i][j])) {\n      this.selectedValue = this.answergrid[i][j];\n      this.enableValueCount = false;\n      return;\n    }\n    if (this.answergrid[i][j] != '') {\n      this.selectedRow = i;\n      this.selectedCol = j;\n      this.selectedValue = this.answergrid[i][j];\n      this.enableValueCount = true;\n    } else {\n      this.selectedValue = null;\n      this.selectedRow = i;\n      this.selectedCol = j;\n      this.enableValueCount = true;\n    }\n  }\n  addValue(value) {\n    let i = this.selectedRow;\n    let j = this.selectedCol;\n    this.answergrid[i][j] = String(value);\n    if (i == null && j == null) return;\n    if (this.answergrid[i][j] != this.grid[i][j]) {\n      this.wrongSelection = true;\n      this.mistakeCount++;\n      this.scoreCount += 50;\n    } else {\n      this.enableValueCount = false;\n      this.selectedCol = null;\n      this.selectedRow = null;\n      this.wrongSelection = false;\n      this.updateCounter();\n    }\n  }\n  checkType(value) {\n    return typeof value == 'number';\n  }\n  updateCounter() {\n    let count = 0;\n    for (let i = 0; i < this.valueCount.length; i++) {\n      let count = 0;\n      for (let row of this.answergrid) {\n        for (let num of row) {\n          if (num == i + 1) {\n            count++;\n          }\n        }\n      }\n      this.valueCount[i].count = count;\n    }\n    // return count;\n  }\n\n  static {\n    this.ɵfac = function SudokuGridComponent_Factory(t) {\n      return new (t || SudokuGridComponent)(i0.ɵɵdirectiveInject(i1.SudokuGeneratorService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SudokuGridComponent,\n      selectors: [[\"app-sudoku-grid\"]],\n      inputs: {\n        grid: \"grid\"\n      },\n      outputs: {\n        VerifyPuzzle: \"VerifyPuzzle\"\n      },\n      decls: 15,\n      vars: 6,\n      consts: [[1, \"message-section\"], [1, \"sudoku-grid\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [1, \"counter-container\"], [1, \"sudoku-value-grid\"], [\"class\", \"value-row\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"myPopup\", \"class\", \"popup\", 4, \"ngIf\"], [3, \"click\"], [1, \"row\"], [\"type\", \"text\", \"maxlength\", \"1\", \"pattern\", \"[1-9]\", 3, \"ngModel\", \"ngClass\", \"readonly\", \"ngModelChange\", \"click\", \"input\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"maxlength\", \"1\", \"pattern\", \"[1-9]\", 3, \"ngModel\", \"ngClass\", \"readonly\", \"ngModelChange\", \"click\", \"input\"], [1, \"value-row\", 3, \"ngClass\", \"click\"], [1, \"number\"], [\"id\", \"myPopup\", 1, \"popup\"], [1, \"popup-content\"], [1, \"heading\"], [1, \"btn\", 3, \"click\"], [1, \"actions\"]],\n      template: function SudokuGridComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"span\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"span\");\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"span\");\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 1);\n          i0.ɵɵtemplate(8, SudokuGridComponent_div_8_Template, 2, 1, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 3)(10, \"div\", 4);\n          i0.ɵɵtemplate(11, SudokuGridComponent_div_11_Template, 5, 6, \"div\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(12, SudokuGridComponent_div_12_Template, 15, 0, \"div\", 6);\n          i0.ɵɵelementStart(13, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function SudokuGridComponent_Template_button_click_13_listener() {\n            return ctx.Validate();\n          });\n          i0.ɵɵtext(14, \"Verify Suduku\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Mistakes: \", ctx.mistakeCount, \"/3 \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Score: \", ctx.mistakeCount, \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Time: \", ctx.mistakeCount, \"/3 \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.grid);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.valueCount);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.mistakeCount == 3);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.MaxLengthValidator, i3.PatternValidator, i3.NgModel],\n      styles: [\".sudoku-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(9, 40px);\\n  grid-template-rows: repeat(9, 40px);\\n  gap: 2px;\\n  justify-content: center;\\n}\\n.sudoku-grid[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%] {\\n  display: contents;\\n}\\n.sudoku-grid[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  text-align: center;\\n  font-size: 18px;\\n  border: 1px solid grey; \\n}\\n.sudoku-grid[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  background-color: #e1fbf6;\\n}\\n.sudoku-grid[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   input.selcted-value[_ngcontent-%COMP%] {\\n  background-color: #c6e2eb;\\n}\\n.sudoku-grid[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   input.wrong-selection[_ngcontent-%COMP%] {\\n  background-color: red;\\n}\\n.sudoku-grid[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   input.disabled-value[_ngcontent-%COMP%] {\\n  pointer-events: none;\\n}\\n\\n.sudoku-value-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(9, 50px);\\n  grid-template-rows: repeat(1, 50px);\\n  gap: 5px;\\n  justify-content: center;\\n  margin-top: 15px;\\n  text-align: center;\\n}\\n.sudoku-value-grid[_ngcontent-%COMP%]   .value-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  border: 1px solid grey;\\n  border-radius: 4px;\\n  padding: 5px 0px;\\n  background-color: #e1fbf6;\\n}\\n.sudoku-value-grid[_ngcontent-%COMP%]   .value-row.hide-number[_ngcontent-%COMP%] {\\n  visibility: hidden;\\n}\\n.sudoku-value-grid[_ngcontent-%COMP%]   .value-row.disable-selection[_ngcontent-%COMP%] {\\n  cursor: none;\\n  pointer-events: none;\\n  background-color: white;\\n}\\n.sudoku-value-grid[_ngcontent-%COMP%]   .value-row[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n}\\n.sudoku-value-grid[_ngcontent-%COMP%]   .value-row[_ngcontent-%COMP%]   span.number[_ngcontent-%COMP%] {\\n  font-size: 18px;\\n  font-weight: 600;\\n}\\n\\n.message-section[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  width: 380px;\\n  margin: auto;\\n  padding: 5px;\\n}\\n.message-section[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  width: 33%;\\n  justify-content: center;\\n  display: flex;\\n}\\n\\n.popup[_ngcontent-%COMP%] {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background: rgba(0, 0, 0, 0.5); \\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  \\n}\\n.popup[_ngcontent-%COMP%]   .popup-content[_ngcontent-%COMP%] {\\n  background: #fff;\\n  padding: 20px;\\n  border-radius: 10px;\\n  width: 300px;\\n  text-align: center;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);\\n  \\n}\\n.popup[_ngcontent-%COMP%]   .popup-content[_ngcontent-%COMP%]   .heading[_ngcontent-%COMP%] {\\n  font-size: 25px;\\n}\\n.popup[_ngcontent-%COMP%]   .popup-content[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  margin-top: 10px;\\n  padding: 8px 16px;\\n  background: #e74c3c;\\n  color: white;\\n  border: none;\\n  text-decoration: none;\\n  border-radius: 5px;\\n}\\n.popup[_ngcontent-%COMP%]   .popup-content[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]:hover {\\n  background: #c0392b;\\n}\\n.popup[_ngcontent-%COMP%]   .popup-content[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] {\\n  display: flex;\\n}\\n.popup[_ngcontent-%COMP%]   .popup-content[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  width: 50%;\\n}\\n\\n\\n.popup-content[_ngcontent-%COMP%] {\\n  background: #fff;\\n  padding: 20px;\\n  border-radius: 10px;\\n  width: 300px;\\n  text-align: center;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);\\n}\\n\\n\\n.sudoku-grid[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(3n+1)   input[_ngcontent-%COMP%] {\\n  border-top: 3px solid #000;\\n}\\n\\n.sudoku-grid[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:last-child   input[_ngcontent-%COMP%] {\\n  border-bottom: 3px solid #000 !important;\\n}\\n\\ninput[_ngcontent-%COMP%]:nth-child(3n+1) {\\n  border-left: 3px solid black !important;\\n}\\n\\ninput[_ngcontent-%COMP%]:last-child {\\n  border-right: 3px solid black !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zdWRva3UtZ3JpZC9zdWRva3UtZ3JpZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxzQ0FBQTtFQUNBLG1DQUFBO0VBQ0EsUUFBQTtFQUNBLHVCQUFBO0FBQ0Y7QUFBRTtFQUNFLGlCQUFBO0FBRUo7QUFESTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0Esc0JBQUEsRUFBQSx5QkFBQTtBQUdOO0FBRk07RUFDRSxhQUFBO0VBQ0EseUJBQUE7QUFJUjtBQUZNO0VBQ0UseUJBQUE7QUFJUjtBQUZNO0VBQ0UscUJBQUE7QUFJUjtBQUZNO0VBRUUsb0JBQUE7QUFHUjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxzQ0FBQTtFQUNBLG1DQUFBO0VBQ0EsUUFBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtBQUNGO0FBQUU7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSx5QkFBQTtBQUVKO0FBREk7RUFDRSxrQkFBQTtBQUdOO0FBREk7RUFDRSxZQUFBO0VBQ0Esb0JBQUE7RUFDQSx1QkFBQTtBQUdOO0FBREk7RUFDRSxlQUFBO0FBR047QUFGTTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtBQUlSOztBQUNBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0FBRUY7QUFERTtFQUNFLFVBQUE7RUFDQSx1QkFBQTtFQUNBLGFBQUE7QUFHSjs7QUFBQTtFQUNFLGVBQUE7RUFDQSxNQUFBO0VBQ0EsT0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsOEJBQUEsRUFBQSxvQkFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBRUEsc0JBQUE7QUFFRjtBQURFO0VBQ0UsZ0JBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSx3Q0FBQTtFQUlBLGlCQUFBO0FBQUo7QUFISTtFQUNFLGVBQUE7QUFLTjtBQUZJO0VBQ0UscUJBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLHFCQUFBO0VBQ0Esa0JBQUE7QUFJTjtBQUhNO0VBQ0UsbUJBQUE7QUFLUjtBQUZJO0VBQ0UsYUFBQTtBQUlOO0FBSE07RUFDRSxVQUFBO0FBS1I7O0FBQ0Esc0JBQUE7QUFDQTtFQUNFLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0Esd0NBQUE7QUFFRjs7QUFDQSx1Q0FBQTtBQUVFO0VBQ0UsMEJBQUE7QUFDSjs7QUFJRTtFQUNFLHdDQUFBO0FBREo7O0FBSUE7RUFDRSx1Q0FBQTtBQURGOztBQUdBO0VBQ0Usd0NBQUE7QUFBRiIsInNvdXJjZXNDb250ZW50IjpbIi5zdWRva3UtZ3JpZCB7XHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg5LCA0MHB4KTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg5LCA0MHB4KTtcclxuICBnYXA6IDJweDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAucm93IHtcclxuICAgIGRpc3BsYXk6IGNvbnRlbnRzO1xyXG4gICAgaW5wdXQge1xyXG4gICAgICB3aWR0aDogNDBweDtcclxuICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgZ3JleTsgLyogRGVmYXVsdCBib3JkZXIgY29sb3IgKi9cclxuICAgICAgJjpmb2N1cyB7XHJcbiAgICAgICAgb3V0bGluZTogbm9uZTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTFmYmY2O1xyXG4gICAgICB9XHJcbiAgICAgICYuc2VsY3RlZC12YWx1ZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2M2ZTJlYjtcclxuICAgICAgfVxyXG4gICAgICAmLndyb25nLXNlbGVjdGlvbiB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG4gICAgICB9XHJcbiAgICAgICYuZGlzYWJsZWQtdmFsdWUge1xyXG4gICAgICAgIC8vIGN1cnNvcjogbm90LWFsbG93ZWQ7XHJcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuLnN1ZG9rdS12YWx1ZS1ncmlkIHtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDksIDUwcHgpO1xyXG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDEsIDUwcHgpO1xyXG4gIGdhcDogNXB4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIC52YWx1ZS1yb3cge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmV5O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgcGFkZGluZzogNXB4IDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlMWZiZjY7XHJcbiAgICAmLmhpZGUtbnVtYmVyIHtcclxuICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgfVxyXG4gICAgJi5kaXNhYmxlLXNlbGVjdGlvbiB7XHJcbiAgICAgIGN1cnNvcjogbm9uZTtcclxuICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgfVxyXG4gICAgc3BhbiB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgJi5udW1iZXIge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbi5tZXNzYWdlLXNlY3Rpb24ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgd2lkdGg6IDM4MHB4O1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBwYWRkaW5nOiA1cHg7XHJcbiAgc3BhbiB7XHJcbiAgICB3aWR0aDogMzMlO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gIH1cclxufVxyXG4ucG9wdXAge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpOyAvKiBkYXJrIGJhY2tncm91bmQgKi9cclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gIC8qIFBvcHVwIGNvbnRlbnQgYm94ICovXHJcbiAgLnBvcHVwLWNvbnRlbnQge1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcclxuICAgIC5oZWFkaW5nIHtcclxuICAgICAgZm9udC1zaXplOiAyNXB4O1xyXG4gICAgfVxyXG4gICAgLyogQ2xvc2UgYnV0dG9uICovXHJcbiAgICAuYnRuIHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgICBwYWRkaW5nOiA4cHggMTZweDtcclxuICAgICAgYmFja2dyb3VuZDogI2U3NGMzYztcclxuICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAmOmhvdmVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjYzAzOTJiO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAuYWN0aW9ucyB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGRpdiB7XHJcbiAgICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLyogUG9wdXAgY29udGVudCBib3ggKi9cclxuLnBvcHVwLWNvbnRlbnQge1xyXG4gIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgcGFkZGluZzogMjBweDtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIHdpZHRoOiAzMDBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcclxufVxyXG5cclxuLyogQWRkaW5nIGJvcmRlciBmb3Igcm93cyBhbmQgY29sdW1ucyAqL1xyXG4uc3Vkb2t1LWdyaWQgZGl2Om50aC1jaGlsZCgzbiArIDEpIHtcclxuICBpbnB1dCB7XHJcbiAgICBib3JkZXItdG9wOiAzcHggc29saWQgIzAwMDtcclxuICB9XHJcbn1cclxuXHJcbi5zdWRva3UtZ3JpZCBkaXY6bGFzdC1jaGlsZCB7XHJcbiAgaW5wdXQge1xyXG4gICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICMwMDAgIWltcG9ydGFudDtcclxuICB9XHJcbn1cclxuaW5wdXQ6bnRoLWNoaWxkKDNuICsgMSkge1xyXG4gIGJvcmRlci1sZWZ0OiAzcHggc29saWQgYmxhY2sgIWltcG9ydGFudDtcclxufVxyXG5pbnB1dDpsYXN0LWNoaWxkIHtcclxuICBib3JkZXItcmlnaHQ6IDNweCBzb2xpZCBibGFjayAhaW1wb3J0YW50O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","i0","SudokuGridComponent","constructor","sudokuGeneratorService","count","ngOnInit","answergrid","generatePuzzleWith25Clues","grid","updateCounter","secondChance","mistakeCount","newGame","restart","validateInput","event","row","col","input","target","value","test","comparetheGrid","i","j","Validate","VerifyPuzzle","emit","SelectedValue","wrongSelection","selectedRow","selectedCol","enableValueCount","checkType","selectedValue","addValue","String","scoreCount","valueCount","length","num","selectors","inputs","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\components\\sudoku-grid\\sudoku-grid.component.ts","D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\components\\sudoku-grid\\sudoku-grid.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SudokuGeneratorService } from 'src/app/service/sudoku-generator.service';\n\n@Component({\n  selector: 'app-sudoku-grid',\n  templateUrl: './sudoku-grid.component.html',\n  styleUrls: ['./sudoku-grid.component.scss'],\n})\nexport class SudokuGridComponent implements OnInit {\n  //grid: any[][];\n  @Input() grid: any[][] = [];\n  @Output() VerifyPuzzle = new EventEmitter<any>();\n  answergrid: any[] = [];\n  selectedValue: any = null;\n  enableValueCount: boolean = false;\n  selectedRow: any = null;\n  selectedCol: any = null;\n  wrongSelection: boolean = false;\n  scoreCount = 0;\n  mistakeCount = 0;\n  valueCount: any[] = [\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n  ];\n\n  constructor(private sudokuGeneratorService: SudokuGeneratorService) {\n    // this.grid = this.sudokuGeneratorService.generateSudoku();\n  }\n  ngOnInit() {\n    this.answergrid = this.sudokuGeneratorService.generatePuzzleWith25Clues(\n      this.grid\n    );\n    this.updateCounter();\n  }\n  secondChance() {\n    this.mistakeCount = 2;\n  }\n  newGame() {\n    this.mistakeCount = 0;\n  }\n  restart() {\n    this.mistakeCount = 0;\n  }\n\n  validateInput(event: Event, row: number, col: number) {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n\n    if (!/^[1-9]$/.test(value)) {\n      input.value = '';\n      this.answergrid[row][col] = '';\n    } else {\n      this.answergrid[row][col] = value;\n    }\n    this.updateCounter();\n  }\n  comparetheGrid() {\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (this.answergrid[i][j] != this.grid[i][j]) return false;\n      }\n    }\n    return true;\n  }\n  Validate() {\n    this.VerifyPuzzle.emit(this.comparetheGrid());\n  }\n  SelectedValue(i: any, j: any) {\n    // if (\n    //   this.wrongSelection ||\n    //   (this.selectedRow &&\n    //     this.selectedCol &&\n    //     this.selectedRow != i &&\n    //     this.selectedCol != j)\n    // ) {\n    //   this.enableValueCount = false;\n    //   return;\n    // }\n    if (this.wrongSelection) {\n      if (this.selectedRow != i && this.selectedCol != j) {\n        this.enableValueCount = false;\n        return;\n      }\n    }\n    if (this.checkType(this.answergrid[i][j])) {\n      this.selectedValue = this.answergrid[i][j];\n      this.enableValueCount = false;\n      return;\n    }\n    if (this.answergrid[i][j] != '') {\n      this.selectedRow = i;\n      this.selectedCol = j;\n      this.selectedValue = this.answergrid[i][j];\n      this.enableValueCount = true;\n    } else {\n      this.selectedValue = null;\n      this.selectedRow = i;\n      this.selectedCol = j;\n      this.enableValueCount = true;\n    }\n  }\n  addValue(value: any) {\n    let i = this.selectedRow;\n    let j = this.selectedCol;\n    this.answergrid[i][j] = String(value);\n    if (i == null && j == null) return;\n    if (this.answergrid[i][j] != this.grid[i][j]) {\n      this.wrongSelection = true;\n      this.mistakeCount++;\n      this.scoreCount += 50;\n    } else {\n      this.enableValueCount = false;\n      this.selectedCol = null;\n      this.selectedRow = null;\n      this.wrongSelection = false;\n      this.updateCounter();\n    }\n  }\n  checkType(value: any) {\n    return typeof value == 'number';\n  }\n  updateCounter() {\n    let count = 0;\n    for (let i = 0; i < this.valueCount.length; i++) {\n      let count = 0;\n      for (let row of this.answergrid) {\n        for (let num of row) {\n          if (num == i + 1) {\n            count++;\n          }\n        }\n      }\n      this.valueCount[i].count = count;\n    }\n\n    // return count;\n  }\n}\n","<div class=\"message-section\">\n  <span>Mistakes: {{ mistakeCount }}/3 </span>\n  <span>Score: {{ mistakeCount }} </span>\n  <span>Time: {{ mistakeCount }}/3 </span>\n</div>\n<div class=\"sudoku-grid\">\n  <div *ngFor=\"let row of grid; let i = index\" class=\"row\">\n    <input\n      *ngFor=\"let col of row; let j = index\"\n      type=\"text\"\n      [(ngModel)]=\"answergrid[i][j]\"\n      [ngClass]=\"{\n        'selcted-value': selectedValue == answergrid[i][j],\n        'wrong-selection':\n          wrongSelection && i == selectedRow && j == selectedCol\n      }\"\n      maxlength=\"1\"\n      pattern=\"[1-9]\"\n      (click)=\"SelectedValue(i, j)\"\n      (input)=\"validateInput($event, i, j)\"\n      [readonly]=\"true\"\n    />\n    <!-- [readonly]=\"checkType(answergrid[i][j])\"\n    /> -->\n  </div>\n</div>\n<div class=\"counter-container\">\n  <div class=\"sudoku-value-grid\">\n    <div\n      *ngFor=\"let row of valueCount; let i = index\"\n      class=\"value-row\"\n      [ngClass]=\"{\n        'hide-number': 9 - row.count == 0,\n        'disable-selection': !enableValueCount\n      }\"\n      (click)=\"addValue(i + 1)\"\n    >\n      <span class=\"number\">\n        {{ i + 1 }}\n      </span>\n      <span>\n        {{ 9 - row.count }}\n      </span>\n    </div>\n  </div>\n</div>\n<div id=\"myPopup\" class=\"popup\" *ngIf=\"mistakeCount == 3\">\n  <div class=\"popup-content\">\n    <span class=\"heading\">Game Over</span>\n    <p>You lost the game because you made 3 mistakes</p>\n    <button class=\"btn\" (click)=\"secondChance()\">Second Chance</button>\n    <div class=\"actions\">\n      <div>\n        <button class=\"btn\" (click)=\"newGame()\">New Game</button>\n      </div>\n      <div>\n        <button class=\"btn\" (click)=\"restart()\">Restart</button>\n      </div>\n    </div>\n  </div>\n</div>\n<button (click)=\"Validate()\">Verify Suduku</button>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}