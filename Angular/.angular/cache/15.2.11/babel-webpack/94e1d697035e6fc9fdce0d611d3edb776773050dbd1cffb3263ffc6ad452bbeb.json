{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/app-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/service/api-factory.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginRegisterComponent_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginRegisterComponent_form_3_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.verifyUser());\n    });\n    i0.ɵɵelement(1, \"input\", 5)(2, \"input\", 6);\n    i0.ɵɵelementStart(3, \"button\", 7);\n    i0.ɵɵtext(4, \"Login\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.loginForm);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.loginForm.invalid);\n  }\n}\nfunction LoginRegisterComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginRegisterComponent_form_4_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.registeruser());\n    });\n    i0.ɵɵelement(1, \"input\", 5)(2, \"input\", 6)(3, \"input\", 8);\n    i0.ɵɵelementStart(4, \"button\", 7);\n    i0.ɵɵtext(5, \" Register \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.registerForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.registerForm.invalid || ctx_r1.val.password != ctx_r1.val.confirmPassword);\n  }\n}\nfunction LoginRegisterComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1, \" Don't have an account? \");\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function LoginRegisterComponent_p_5_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.goToSignUp());\n    });\n    i0.ɵɵtext(3, \"Sign up\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginRegisterComponent_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1, \" Already have an account? \");\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function LoginRegisterComponent_p_6_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.goToSignUp());\n    });\n    i0.ɵɵtext(3, \"Login now\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class LoginRegisterComponent {\n  constructor(appServiceService, router, apiFactoryService) {\n    this.appServiceService = appServiceService;\n    this.router = router;\n    this.apiFactoryService = apiFactoryService;\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n    this.registerForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n      confirmPassword: new FormControl('', [Validators.required])\n    });\n  }\n  get val() {\n    return this.registerForm.value;\n  }\n  ngOnInit() {\n    const stateData = window.history.state;\n    if (stateData) {\n      this.pageTitle = stateData.pageTitle;\n      console.log(this.pageTitle); // { userId: 123, score: 50 }\n    } else {\n      console.log('No state data found.');\n    }\n  }\n  verifyUser() {\n    let formValue = this.loginForm.value;\n    console.log(formValue);\n    this.apiFactoryService.loginUser(formValue).subscribe(res => {\n      console.log(res);\n      if (res.response) {\n        alert('Login Successfully done !!');\n        this.appServiceService.logedInUser = res.data;\n        this.router.navigate(['/solve-sudoku']);\n        return;\n      } else {\n        alert('Invalid username or Password !!');\n      }\n    });\n  }\n  registeruser() {\n    if (this.val.password != this.val.confirmPassword) return;\n    let formValue = {\n      username: this.val.username,\n      password: this.val.password\n    };\n    this.apiFactoryService.registerUser(formValue).subscribe(res => {\n      console.log(res);\n      if (res.response) {\n        alert(res.message);\n        this.appServiceService.logedInUser = res.data;\n        console.log(this.appServiceService.logedInUser);\n        this.router.navigate(['/solve-sudoku']);\n        return;\n      } else {\n        alert(res.message);\n        this.router.navigate(['/login'], {\n          state: {\n            pageTitle: 'login'\n          }\n        });\n      }\n    });\n  }\n  goToSignUp() {\n    let data = {\n      pageTitle: 'sign-up'\n    };\n    if (this.pageTitle == 'sign-up') {\n      data = {\n        pageTitle: 'login'\n      };\n      this.router.navigate(['/login'], {\n        state: data // Passing data\n      });\n    } else {\n      this.router.navigate(['/sign_up'], {\n        state: data // Passing data\n      });\n    }\n  }\n\n  static {\n    this.ɵfac = function LoginRegisterComponent_Factory(t) {\n      return new (t || LoginRegisterComponent)(i0.ɵɵdirectiveInject(i1.AppServiceService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.APIFactoryService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginRegisterComponent,\n      selectors: [[\"app-login-register\"]],\n      decls: 8,\n      vars: 5,\n      consts: [[1, \"login-container\"], [\"id\", \"loginForm\", \"class\", \"login-register-Form\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"class\", \"sign_up\", 4, \"ngIf\"], [\"id\", \"message\"], [\"id\", \"loginForm\", 1, \"login-register-Form\", 3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"username\", \"placeholder\", \"Username\", \"type\", \"text\", \"id\", \"username\", \"required\", \"\"], [\"formControlName\", \"password\", \"placeholder\", \"Password\", \"type\", \"password\", \"id\", \"password\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"], [\"formControlName\", \"confirmPassword\", \"placeholder\", \"Confirm Password\", \"type\", \"password\", \"id\", \"confirmPassword\", \"required\", \"\"], [1, \"sign_up\"], [3, \"click\"]],\n      template: function LoginRegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, LoginRegisterComponent_form_3_Template, 5, 2, \"form\", 1);\n          i0.ɵɵtemplate(4, LoginRegisterComponent_form_4_Template, 6, 2, \"form\", 1);\n          i0.ɵɵtemplate(5, LoginRegisterComponent_p_5_Template, 4, 0, \"p\", 2);\n          i0.ɵɵtemplate(6, LoginRegisterComponent_p_6_Template, 4, 0, \"p\", 2);\n          i0.ɵɵelement(7, \"p\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.pageTitle != \"sign-up\" ? \"Login\" : \"Register\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.pageTitle != \"sign-up\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.pageTitle == \"sign-up\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.pageTitle != \"sign-up\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.pageTitle == \"sign-up\");\n        }\n      },\n      dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName],\n      styles: [\".login-container[_ngcontent-%COMP%] {\\n  width: 300px;\\n  padding: 20px;\\n  margin: 50px auto;\\n  border: 1px solid #ddd;\\n  border-radius: 8px;\\n  text-align: center;\\n  background: #f9f9f9;\\n  display: flex;\\n  flex-direction: column;\\n}\\n.login-container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n}\\n.login-container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  border: none;\\n  background: transparent;\\n  cursor: pointer;\\n  color: #28a745;\\n}\\n.login-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  margin: 10px;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-register-Form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-register-Form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  padding: 8px;\\n  margin: 5px 0;\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-register-Form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  background-color: #28a745;\\n  color: white;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  margin-top: 10px;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-register-Form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #218838;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-register-Form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled {\\n  opacity: 0.5;\\n}\\n\\n@media (min-width: 320px) and (max-width: 767px) {\\n  .login-container[_ngcontent-%COMP%] {\\n    width: 80%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi1yZWdpc3Rlci9sb2dpbi1yZWdpc3Rlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7RUFDQSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtBQUNGO0FBQ0U7RUFDRSxnQkFBQTtBQUNKO0FBQUk7RUFDRSxZQUFBO0VBQ0EsdUJBQUE7RUFDQSxlQUFBO0VBQ0EsY0FBQTtBQUVOO0FBQ0U7RUFDRSxZQUFBO0FBQ0o7QUFDRTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtBQUNKO0FBQ0k7RUFDRSxZQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7QUFDTjtBQUVJO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUFBTjtBQUdJO0VBQ0UseUJBQUE7QUFETjtBQUdJO0VBQ0UsWUFBQTtBQUROOztBQUtBO0VBQ0U7SUFDRSxVQUFBO0VBRkY7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbi1jb250YWluZXIge1xyXG4gIHdpZHRoOiAzMDBweDtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIG1hcmdpbjogNTBweCBhdXRvO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kOiAjZjlmOWY5O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHJcbiAgcCB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgYnV0dG9uIHtcclxuICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICBjb2xvcjogIzI4YTc0NTtcclxuICAgIH1cclxuICB9XHJcbiAgaDIge1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG4gIH1cclxuICAubG9naW4tcmVnaXN0ZXItRm9ybSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHJcbiAgICBpbnB1dCB7XHJcbiAgICAgIHBhZGRpbmc6IDhweDtcclxuICAgICAgbWFyZ2luOiA1cHggMDtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgfVxyXG5cclxuICAgIGJ1dHRvbiB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjhhNzQ1O1xyXG4gICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgYnV0dG9uOmhvdmVyIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzIxODgzODtcclxuICAgIH1cclxuICAgIGJ1dHRvbjpkaXNhYmxlZCB7XHJcbiAgICAgIG9wYWNpdHk6IDAuNTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuQG1lZGlhIChtaW4td2lkdGg6IDMyMHB4KSBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcclxuICAubG9naW4tY29udGFpbmVyIHtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;;;ICCjEC,+BAMC;IADCA;MAAAA;MAAA;MAAA,OAAYA,kCAAY;IAAA,EAAC;IAGzBA,2BAME;IAWFA,iCAAqD;IAAAA,qBAAK;IAAAA,iBAAS;;;;IAvBnEA,4CAAuB;IAuBDA,eAA8B;IAA9BA,mDAA8B;;;;;;IAEtDA,+BAMC;IADCA;MAAAA;MAAA;MAAA,OAAYA,oCAAc;IAAA,EAAC;IAG3BA,2BAME;IAiBFA,iCAGC;IACCA,0BACF;IAAAA,iBAAS;;;;IAlCTA,+CAA0B;IA+BxBA,eAAwE;IAAxEA,2GAAwE;;;;;;IAK5EA,4BAAkD;IAChDA,wCAAuB;IAAAA,kCAA+B;IAAvBA;MAAAA;MAAA;MAAA,OAASA,kCAAY;IAAA,EAAC;IAACA,uBAAO;IAAAA,iBAAS;;;;;;IAExEA,4BAAkD;IAChDA,0CAAyB;IAAAA,kCAA+B;IAAvBA;MAAAA;MAAA;MAAA,OAASA,mCAAY;IAAA,EAAC;IAACA,yBAAS;IAAAA,iBAAS;;;AD7D9E,OAAM,MAAOC,sBAAsB;EACjCC,YACUC,iBAAoC,EACpCC,MAAc,EACdC,iBAAoC;IAFpC,sBAAiB,GAAjBF,iBAAiB;IACjB,WAAM,GAANC,MAAM;IACN,sBAAiB,GAAjBC,iBAAiB;IAE3B,cAAS,GAAG,IAAIP,SAAS,CAAC;MACxBQ,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;MACpDC,QAAQ,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC;KACpD,CAAC;IACF,iBAAY,GAAG,IAAIT,SAAS,CAAC;MAC3BQ,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;MACpDC,QAAQ,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;MACpDE,eAAe,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC;KAC3D,CAAC;EATC;EAUH,IAAIG,GAAG;IACL,OAAO,IAAI,CAACC,YAAY,CAACC,KAAK;EAChC;EAEAC,QAAQ;IACN,MAAMC,SAAS,GAAGC,MAAM,CAACC,OAAO,CAACC,KAAK;IACtC,IAAIH,SAAS,EAAE;MACb,IAAI,CAACI,SAAS,GAAGJ,SAAS,CAACI,SAAS;MACpCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,SAAS,CAAC,CAAC,CAAC;KAC9B,MAAM;MACLC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;;EAEvC;EACAC,UAAU;IACR,IAAIC,SAAS,GAAG,IAAI,CAACC,SAAS,CAACX,KAAK;IACpCO,OAAO,CAACC,GAAG,CAACE,SAAS,CAAC;IACtB,IAAI,CAACjB,iBAAiB,CAACmB,SAAS,CAACF,SAAS,CAAC,CAACG,SAAS,CAAEC,GAAG,IAAI;MAC5DP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MAChB,IAAIA,GAAG,CAACC,QAAQ,EAAE;QAChBC,KAAK,CAAC,4BAA4B,CAAC;QACnC,IAAI,CAACzB,iBAAiB,CAAC0B,WAAW,GAAGH,GAAG,CAACI,IAAI;QAC7C,IAAI,CAAC1B,MAAM,CAAC2B,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;QACvC;OACD,MAAM;QACLH,KAAK,CAAC,iCAAiC,CAAC;;IAE5C,CAAC,CAAC;EACJ;EACAI,YAAY;IACV,IAAI,IAAI,CAACtB,GAAG,CAACF,QAAQ,IAAI,IAAI,CAACE,GAAG,CAACD,eAAe,EAAE;IACnD,IAAIa,SAAS,GAAG;MACdhB,QAAQ,EAAE,IAAI,CAACI,GAAG,CAACJ,QAAQ;MAC3BE,QAAQ,EAAE,IAAI,CAACE,GAAG,CAACF;KACpB;IACD,IAAI,CAACH,iBAAiB,CAAC4B,YAAY,CAACX,SAAS,CAAC,CAACG,SAAS,CAAEC,GAAG,IAAI;MAC/DP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MAChB,IAAIA,GAAG,CAACC,QAAQ,EAAE;QAChBC,KAAK,CAACF,GAAG,CAACQ,OAAO,CAAC;QAClB,IAAI,CAAC/B,iBAAiB,CAAC0B,WAAW,GAAGH,GAAG,CAACI,IAAI;QAC7CX,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,iBAAiB,CAAC0B,WAAW,CAAC;QAC/C,IAAI,CAACzB,MAAM,CAAC2B,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;QAEvC;OACD,MAAM;QACLH,KAAK,CAACF,GAAG,CAACQ,OAAO,CAAC;QAClB,IAAI,CAAC9B,MAAM,CAAC2B,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;UAC/Bd,KAAK,EAAE;YAAEC,SAAS,EAAE;UAAO;SAC5B,CAAC;;IAEN,CAAC,CAAC;EACJ;EACAiB,UAAU;IACR,IAAIL,IAAI,GAAG;MAAEZ,SAAS,EAAE;IAAS,CAAE;IACnC,IAAI,IAAI,CAACA,SAAS,IAAI,SAAS,EAAE;MAC/BY,IAAI,GAAG;QAAEZ,SAAS,EAAE;MAAO,CAAE;MAC7B,IAAI,CAACd,MAAM,CAAC2B,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;QAC/Bd,KAAK,EAAEa,IAAI,CAAE;OACd,CAAC;KACH,MAAM;MACL,IAAI,CAAC1B,MAAM,CAAC2B,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE;QACjCd,KAAK,EAAEa,IAAI,CAAE;OACd,CAAC;;EAEN;;;;uBA9EW7B,sBAAsB;IAAA;EAAA;;;YAAtBA,sBAAsB;MAAAmC;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCVnCxC,8BAA6B;UACvBA,YAAmD;UAAAA,iBAAK;UAC5DA,yEA0BO;UACPA,yEAqCO;UACPA,mEAEI;UACJA,mEAEI;UACJA,uBAAoB;UACtBA,iBAAM;;;UAzEAA,eAAmD;UAAnDA,uEAAmD;UAEpDA,eAA4B;UAA5BA,iDAA4B;UA2B5BA,eAA4B;UAA5BA,iDAA4B;UAqCXA,eAA4B;UAA5BA,iDAA4B;UAG5BA,eAA4B;UAA5BA,iDAA4B","names":["FormControl","FormGroup","Validators","i0","LoginRegisterComponent","constructor","appServiceService","router","apiFactoryService","username","required","password","confirmPassword","val","registerForm","value","ngOnInit","stateData","window","history","state","pageTitle","console","log","verifyUser","formValue","loginForm","loginUser","subscribe","res","response","alert","logedInUser","data","navigate","registeruser","registerUser","message","goToSignUp","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\components\\login-register\\login-register.component.ts","D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\components\\login-register\\login-register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { APIFactoryService } from 'src/app/service/api-factory.service';\nimport { AppServiceService } from 'src/app/service/app-service.service';\n@Component({\n  selector: 'app-login-register',\n  templateUrl: './login-register.component.html',\n  styleUrls: ['./login-register.component.scss'],\n})\nexport class LoginRegisterComponent implements OnInit {\n  constructor(\n    private appServiceService: AppServiceService,\n    private router: Router,\n    private apiFactoryService: APIFactoryService\n  ) {}\n  loginForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  });\n  registerForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n    confirmPassword: new FormControl('', [Validators.required]),\n  });\n  get val() {\n    return this.registerForm.value;\n  }\n  pageTitle: any;\n  ngOnInit(): void {\n    const stateData = window.history.state;\n    if (stateData) {\n      this.pageTitle = stateData.pageTitle;\n      console.log(this.pageTitle); // { userId: 123, score: 50 }\n    } else {\n      console.log('No state data found.');\n    }\n  }\n  verifyUser() {\n    let formValue = this.loginForm.value;\n    console.log(formValue);\n    this.apiFactoryService.loginUser(formValue).subscribe((res) => {\n      console.log(res);\n      if (res.response) {\n        alert('Login Successfully done !!');\n        this.appServiceService.logedInUser = res.data;\n        this.router.navigate(['/solve-sudoku']);\n        return;\n      } else {\n        alert('Invalid username or Password !!');\n      }\n    });\n  }\n  registeruser() {\n    if (this.val.password != this.val.confirmPassword) return;\n    let formValue = {\n      username: this.val.username,\n      password: this.val.password,\n    };\n    this.apiFactoryService.registerUser(formValue).subscribe((res) => {\n      console.log(res);\n      if (res.response) {\n        alert(res.message);\n        this.appServiceService.logedInUser = res.data;\n        console.log(this.appServiceService.logedInUser);\n        this.router.navigate(['/solve-sudoku']);\n\n        return;\n      } else {\n        alert(res.message);\n        this.router.navigate(['/login'], {\n          state: { pageTitle: 'login' },\n        });\n      }\n    });\n  }\n  goToSignUp() {\n    let data = { pageTitle: 'sign-up' };\n    if (this.pageTitle == 'sign-up') {\n      data = { pageTitle: 'login' };\n      this.router.navigate(['/login'], {\n        state: data, // Passing data\n      });\n    } else {\n      this.router.navigate(['/sign_up'], {\n        state: data, // Passing data\n      });\n    }\n  }\n}\n","<div class=\"login-container\">\n  <h2>{{ pageTitle != \"sign-up\" ? \"Login\" : \"Register\" }}</h2>\n  <form\n    *ngIf=\"pageTitle != 'sign-up'\"\n    [formGroup]=\"loginForm\"\n    id=\"loginForm\"\n    class=\"login-register-Form\"\n    (ngSubmit)=\"verifyUser()\"\n  >\n    <!-- <label for=\"username\">Username:</label> -->\n    <input\n      formControlName=\"username\"\n      placeholder=\"Username\"\n      type=\"text\"\n      id=\"username\"\n      required\n    />\n\n    <!-- <label for=\"password\">Password:</label> -->\n    <input\n      formControlName=\"password\"\n      placeholder=\"Password\"\n      type=\"password\"\n      id=\"password\"\n      required\n    />\n\n    <button type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\n  </form>\n  <form\n    *ngIf=\"pageTitle == 'sign-up'\"\n    [formGroup]=\"registerForm\"\n    id=\"loginForm\"\n    class=\"login-register-Form\"\n    (ngSubmit)=\"registeruser()\"\n  >\n    <!-- <label for=\"username\">Username:</label> -->\n    <input\n      formControlName=\"username\"\n      placeholder=\"Username\"\n      type=\"text\"\n      id=\"username\"\n      required\n    />\n\n    <!-- <label for=\"password\">Password:</label> -->\n    <input\n      formControlName=\"password\"\n      placeholder=\"Password\"\n      type=\"password\"\n      id=\"password\"\n      required\n    />\n    <input\n      formControlName=\"confirmPassword\"\n      placeholder=\"Confirm Password\"\n      type=\"password\"\n      id=\"confirmPassword\"\n      required\n    />\n    <button\n      type=\"submit\"\n      [disabled]=\"registerForm.invalid || val.password != val.confirmPassword\"\n    >\n      Register\n    </button>\n  </form>\n  <p class=\"sign_up\" *ngIf=\"pageTitle != 'sign-up'\">\n    Don't have an account? <button (click)=\"goToSignUp()\">Sign up</button>\n  </p>\n  <p class=\"sign_up\" *ngIf=\"pageTitle == 'sign-up'\">\n    Already have an account? <button (click)=\"goToSignUp()\">Login now</button>\n  </p>\n  <p id=\"message\"></p>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}