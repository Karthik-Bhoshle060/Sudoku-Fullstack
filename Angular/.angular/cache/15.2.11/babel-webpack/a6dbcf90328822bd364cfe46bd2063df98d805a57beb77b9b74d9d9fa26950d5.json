{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  CanMatch(route, segments) {\n    const isLoggedIn = false; // Replace with real logic\n    if (!isLoggedIn) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAW;EACrCC,QAAQ,CACNC,KAAY,EACZC,QAAsB;IAMtB,MAAMC,UAAU,GAAG,KAAK,CAAC,CAAC;IAE1B,IAAI,CAACA,UAAU,EAAE;MACf,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;;;uBAjBWP,SAAS;IAAA;EAAA;;;aAATA,SAAS;MAAAQ,SAATR,SAAS;MAAAS,YAFR;IAAM;EAAA","names":["AuthGuard","constructor","router","CanMatch","route","segments","isLoggedIn","navigate","factory","providedIn"],"sourceRoot":"","sources":["D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\service\\auth\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanMatch, Route, Router, UrlSegment, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanMatch {\n  constructor(private router: Router) {}\n  CanMatch(\n    route: Route,\n    segments: UrlSegment[]\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    const isLoggedIn = false; // Replace with real logic\n\n    if (!isLoggedIn) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}