{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/sudoku-generator.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function (a0) {\n  return {\n    selcted: a0\n  };\n};\nfunction SudokuGridComponent_div_1_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function SudokuGridComponent_div_1_input_1_Template_input_ngModelChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const j_r6 = restoredCtx.index;\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.answergrid[i_r3][j_r6] = $event);\n    })(\"click\", function SudokuGridComponent_div_1_input_1_Template_input_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const j_r6 = restoredCtx.index;\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.SelectedValue(ctx_r10.answergrid[i_r3][j_r6]));\n    })(\"input\", function SudokuGridComponent_div_1_input_1_Template_input_input_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const j_r6 = restoredCtx.index;\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.validateInput($event, i_r3, j_r6));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const j_r6 = ctx.index;\n    const i_r3 = i0.ɵɵnextContext().index;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.answergrid[i_r3][j_r6])(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ctx_r4.selectedValue == ctx_r4.answergrid[i_r3][j_r6]))(\"readonly\", ctx_r4.checkType(ctx_r4.answergrid[i_r3][j_r6]));\n  }\n}\nfunction SudokuGridComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, SudokuGridComponent_div_1_input_1_Template, 1, 5, \"input\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r2);\n  }\n}\nfunction SudokuGridComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r15 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", row_r15.count, \" \");\n  }\n}\nexport class SudokuGridComponent {\n  constructor(sudokuGeneratorService) {\n    this.sudokuGeneratorService = sudokuGeneratorService;\n    //grid: any[][];\n    this.grid = [];\n    this.VerifyPuzzle = new EventEmitter();\n    this.answergrid = [];\n    this.selectedValue = null;\n    this.valueCount = [{\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }, {\n      count: 0\n    }];\n    // this.grid = this.sudokuGeneratorService.generateSudoku();\n  }\n\n  ngOnInit() {\n    this.answergrid = this.sudokuGeneratorService.generatePuzzleWith25Clues(this.grid);\n  }\n  validateInput(event, row, col) {\n    const input = event.target;\n    const value = input.value;\n    if (!/^[1-9]$/.test(value)) {\n      input.value = '';\n      this.answergrid[row][col] = '';\n    } else {\n      this.answergrid[row][col] = value;\n    }\n  }\n  comparetheGrid() {\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (this.answergrid[i][j] != this.grid[i][j]) return false;\n      }\n    }\n    return true;\n  }\n  Validate() {\n    this.VerifyPuzzle.emit(this.comparetheGrid());\n  }\n  SelectedValue(value) {\n    if (value != '') {\n      this.selectedValue = value;\n    } else {\n      this.selectedValue = null;\n    }\n  }\n  checkType(value) {\n    return typeof value == 'number';\n  }\n  static {\n    this.ɵfac = function SudokuGridComponent_Factory(t) {\n      return new (t || SudokuGridComponent)(i0.ɵɵdirectiveInject(i1.SudokuGeneratorService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SudokuGridComponent,\n      selectors: [[\"app-sudoku-grid\"]],\n      inputs: {\n        grid: \"grid\"\n      },\n      outputs: {\n        VerifyPuzzle: \"VerifyPuzzle\"\n      },\n      decls: 6,\n      vars: 2,\n      consts: [[1, \"sudoku-grid\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"value-row\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [1, \"row\"], [\"type\", \"text\", \"maxlength\", \"1\", \"pattern\", \"[1-9]\", 3, \"ngModel\", \"ngClass\", \"readonly\", \"ngModelChange\", \"click\", \"input\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"maxlength\", \"1\", \"pattern\", \"[1-9]\", 3, \"ngModel\", \"ngClass\", \"readonly\", \"ngModelChange\", \"click\", \"input\"], [1, \"value-row\"]],\n      template: function SudokuGridComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, SudokuGridComponent_div_1_Template, 2, 1, \"div\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 0);\n          i0.ɵɵtemplate(3, SudokuGridComponent_div_3_Template, 3, 1, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function SudokuGridComponent_Template_button_click_4_listener() {\n            return ctx.Validate();\n          });\n          i0.ɵɵtext(5, \"Verify Suduku\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.grid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.valueCount);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.MaxLengthValidator, i3.PatternValidator, i3.NgModel],\n      styles: [\".sudoku-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(9, 40px);\\n  grid-template-rows: repeat(9, 40px);\\n  gap: 2px;\\n  justify-content: center;\\n}\\n\\n.row[_ngcontent-%COMP%] {\\n  display: contents;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  text-align: center;\\n  font-size: 18px;\\n  border: 1px solid grey; \\n}\\ninput[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  background-color: #e1fbf6;\\n}\\ninput.selcted[_ngcontent-%COMP%] {\\n  background-color: #c6e2eb;\\n}\\ninput.disabled-value[_ngcontent-%COMP%] {\\n  pointer-events: none;\\n}\\n\\n\\n.sudoku-grid[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(3n+1)   input[_ngcontent-%COMP%] {\\n  border-top: 3px solid #000;\\n}\\n\\n.sudoku-grid[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:last-child   input[_ngcontent-%COMP%] {\\n  border-bottom: 3px solid #000;\\n}\\n\\ninput[_ngcontent-%COMP%]:nth-child(3n+1) {\\n  border-left: 3px solid black;\\n}\\n\\ninput[_ngcontent-%COMP%]:last-child {\\n  border-right: 3px solid black;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zdWRva3UtZ3JpZC9zdWRva3UtZ3JpZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxzQ0FBQTtFQUNBLG1DQUFBO0VBQ0EsUUFBQTtFQUNBLHVCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxpQkFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxzQkFBQSxFQUFBLHlCQUFBO0FBQ0Y7QUFBRTtFQUNFLGFBQUE7RUFDQSx5QkFBQTtBQUVKO0FBQUU7RUFDRSx5QkFBQTtBQUVKO0FBQUU7RUFFRSxvQkFBQTtBQUNKOztBQUdBLHVDQUFBO0FBRUU7RUFDRSwwQkFBQTtBQURKOztBQU1FO0VBQ0UsNkJBQUE7QUFISjs7QUFNQTtFQUNFLDRCQUFBO0FBSEY7O0FBS0E7RUFDRSw2QkFBQTtBQUZGIiwic291cmNlc0NvbnRlbnQiOlsiLnN1ZG9rdS1ncmlkIHtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDksIDQwcHgpO1xyXG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDksIDQwcHgpO1xyXG4gIGdhcDogMnB4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4ucm93IHtcclxuICBkaXNwbGF5OiBjb250ZW50cztcclxufVxyXG5cclxuaW5wdXQge1xyXG4gIHdpZHRoOiA0MHB4O1xyXG4gIGhlaWdodDogNDBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIGdyZXk7IC8qIERlZmF1bHQgYm9yZGVyIGNvbG9yICovXHJcbiAgJjpmb2N1cyB7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2UxZmJmNjtcclxuICB9XHJcbiAgJi5zZWxjdGVkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjNmUyZWI7XHJcbiAgfVxyXG4gICYuZGlzYWJsZWQtdmFsdWUge1xyXG4gICAgLy8gY3Vyc29yOiBub3QtYWxsb3dlZDtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gIH1cclxufVxyXG5cclxuLyogQWRkaW5nIGJvcmRlciBmb3Igcm93cyBhbmQgY29sdW1ucyAqL1xyXG4uc3Vkb2t1LWdyaWQgZGl2Om50aC1jaGlsZCgzbiArIDEpIHtcclxuICBpbnB1dCB7XHJcbiAgICBib3JkZXItdG9wOiAzcHggc29saWQgIzAwMDtcclxuICB9XHJcbn1cclxuXHJcbi5zdWRva3UtZ3JpZCBkaXY6bGFzdC1jaGlsZCB7XHJcbiAgaW5wdXQge1xyXG4gICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICMwMDA7XHJcbiAgfVxyXG59XHJcbmlucHV0Om50aC1jaGlsZCgzbiArIDEpIHtcclxuICBib3JkZXItbGVmdDogM3B4IHNvbGlkIGJsYWNrO1xyXG59XHJcbmlucHV0Omxhc3QtY2hpbGQge1xyXG4gIGJvcmRlci1yaWdodDogM3B4IHNvbGlkIGJsYWNrO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","i0","SudokuGridComponent","constructor","sudokuGeneratorService","count","ngOnInit","answergrid","generatePuzzleWith25Clues","grid","validateInput","event","row","col","input","target","value","test","comparetheGrid","i","j","Validate","VerifyPuzzle","emit","SelectedValue","selectedValue","checkType","selectors","inputs","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\components\\sudoku-grid\\sudoku-grid.component.ts","D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\components\\sudoku-grid\\sudoku-grid.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SudokuGeneratorService } from 'src/app/service/sudoku-generator.service';\n\n@Component({\n  selector: 'app-sudoku-grid',\n  templateUrl: './sudoku-grid.component.html',\n  styleUrls: ['./sudoku-grid.component.scss'],\n})\nexport class SudokuGridComponent implements OnInit {\n  //grid: any[][];\n  @Input() grid: any[][] = [];\n  @Output() VerifyPuzzle = new EventEmitter<any>();\n  answergrid: any[] = [];\n  selectedValue: any = null;\n  valueCount = [\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n    { count: 0 },\n  ];\n\n  constructor(private sudokuGeneratorService: SudokuGeneratorService) {\n    // this.grid = this.sudokuGeneratorService.generateSudoku();\n  }\n  ngOnInit() {\n    this.answergrid = this.sudokuGeneratorService.generatePuzzleWith25Clues(\n      this.grid\n    );\n  }\n\n  validateInput(event: Event, row: number, col: number) {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n\n    if (!/^[1-9]$/.test(value)) {\n      input.value = '';\n      this.answergrid[row][col] = '';\n    } else {\n      this.answergrid[row][col] = value;\n    }\n  }\n  comparetheGrid() {\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (this.answergrid[i][j] != this.grid[i][j]) return false;\n      }\n    }\n    return true;\n  }\n  Validate() {\n    this.VerifyPuzzle.emit(this.comparetheGrid());\n  }\n  SelectedValue(value: any) {\n    if (value != '') {\n      this.selectedValue = value;\n    } else {\n      this.selectedValue = null;\n    }\n  }\n  checkType(value: any) {\n    return typeof value == 'number';\n  }\n}\n","<div class=\"sudoku-grid\">\n  <div *ngFor=\"let row of grid; let i = index\" class=\"row\">\n    <input\n      *ngFor=\"let col of row; let j = index\"\n      type=\"text\"\n      [(ngModel)]=\"answergrid[i][j]\"\n      [ngClass]=\"{\n        selcted: selectedValue == answergrid[i][j],\n        \n      }\"\n      maxlength=\"1\"\n      pattern=\"[1-9]\"\n      (click)=\"SelectedValue(answergrid[i][j])\"\n      (input)=\"validateInput($event, i, j)\"\n      [readonly]=\"checkType(answergrid[i][j])\"\n    />\n  </div>\n</div>\n<div class=\"sudoku-grid\">\n  <div *ngFor=\"let row of valueCount; let i = index\" class=\"value-row\">\n    <div>\n      {{ row.count }}\n    </div>\n  </div>\n</div>\n<button (click)=\"Validate()\">Verify Suduku</button>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}