{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/app-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginRegisterComponent {\n  constructor(appServiceService, router) {\n    this.appServiceService = appServiceService;\n    this.router = router;\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n    this.registerForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n      confirmPassword: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    {\n      const stateData = window.history.state;\n      if (stateData) {\n        this.pageTitle = stateData.pageTitle;\n        console.log(this.pageTitle); // { userId: 123, score: 50 }\n      } else {\n        console.log('No state data found.');\n      }\n    }\n  }\n  verifyUser() {\n    let formValue = this.loginForm.value;\n    if (formValue.username == 'Karthik Devendra Rao' && formValue.password == 'Karthik@123') {\n      alert('Login Successfully done !!');\n      this.appServiceService.userDetail = formValue;\n      this.router.navigate(['home']);\n      //this.appServiceService.loginDone.next('done');\n    } else {\n      alert('Invalid username or Password !!');\n    }\n  }\n  goToSignUp() {\n    const data = {\n      pageTitle: 'sign-up'\n    };\n    this.router.navigate(['/sign_up'], {\n      state: data // Passing data\n    });\n  }\n\n  static {\n    this.ɵfac = function LoginRegisterComponent_Factory(t) {\n      return new (t || LoginRegisterComponent)(i0.ɵɵdirectiveInject(i1.AppServiceService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginRegisterComponent,\n      selectors: [[\"app-login-register\"]],\n      decls: 13,\n      vars: 2,\n      consts: [[1, \"login-container\"], [\"id\", \"loginForm\", 1, \"login-register-Form\", 3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"username\", \"placeholder\", \"Username\", \"type\", \"text\", \"id\", \"username\", \"required\", \"\"], [\"formControlName\", \"password\", \"placeholder\", \"Password\", \"type\", \"password\", \"id\", \"password\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"sign_up\"], [3, \"click\"], [\"id\", \"message\"]],\n      template: function LoginRegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginRegisterComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.verifyUser();\n          });\n          i0.ɵɵelement(4, \"input\", 2)(5, \"input\", 3);\n          i0.ɵɵelementStart(6, \"button\", 4);\n          i0.ɵɵtext(7, \"Login\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"p\", 5);\n          i0.ɵɵtext(9, \" Don't have an account? \");\n          i0.ɵɵelementStart(10, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function LoginRegisterComponent_Template_button_click_10_listener() {\n            return ctx.goToSignUp();\n          });\n          i0.ɵɵtext(11, \"Sign up\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(12, \"p\", 7);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n      styles: [\".login-container[_ngcontent-%COMP%] {\\n  width: 300px;\\n  padding: 20px;\\n  margin: 50px auto;\\n  border: 1px solid #ddd;\\n  border-radius: 8px;\\n  text-align: center;\\n  background: #f9f9f9;\\n  display: flex;\\n  flex-direction: column;\\n}\\n.login-container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n}\\n.login-container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  border: none;\\n  background: transparent;\\n  color: navy;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-register-Form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-register-Form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  padding: 8px;\\n  margin: 5px 0;\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-register-Form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  background-color: #28a745;\\n  color: white;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  margin-top: 10px;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-register-Form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #218838;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-register-Form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled {\\n  opacity: 0.5;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi1yZWdpc3Rlci9sb2dpbi1yZWdpc3Rlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7RUFDQSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtBQUNGO0FBQ0U7RUFDRSxnQkFBQTtBQUNKO0FBQUk7RUFDRSxZQUFBO0VBQ0EsdUJBQUE7RUFFQSxXQUFBO0FBQ047QUFFRTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtBQUFKO0FBRUk7RUFDRSxZQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7QUFBTjtBQUdJO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUFETjtBQUlJO0VBQ0UseUJBQUE7QUFGTjtBQUlJO0VBQ0UsWUFBQTtBQUZOIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRhaW5lciB7XHJcbiAgd2lkdGg6IDMwMHB4O1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgbWFyZ2luOiA1MHB4IGF1dG87XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGJhY2tncm91bmQ6ICNmOWY5Zjk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cclxuICBwIHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICBidXR0b24ge1xyXG4gICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG5cclxuICAgICAgY29sb3I6IG5hdnk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5sb2dpbi1yZWdpc3Rlci1Gb3JtIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cclxuICAgIGlucHV0IHtcclxuICAgICAgcGFkZGluZzogOHB4O1xyXG4gICAgICBtYXJnaW46IDVweCAwO1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICB9XHJcblxyXG4gICAgYnV0dG9uIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyOGE3NDU7XHJcbiAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIH1cclxuXHJcbiAgICBidXR0b246aG92ZXIge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE4ODM4O1xyXG4gICAgfVxyXG4gICAgYnV0dG9uOmRpc2FibGVkIHtcclxuICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;AAQnE,OAAM,MAAOC,sBAAsB;EACjCC,YACUC,iBAAoC,EACpCC,MAAc;IADd,sBAAiB,GAAjBD,iBAAiB;IACjB,WAAM,GAANC,MAAM;IAEhB,cAAS,GAAG,IAAIL,SAAS,CAAC;MACxBM,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,CAAC,CAAC;MACpDC,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,CAAC;KACpD,CAAC;IACF,iBAAY,GAAG,IAAIP,SAAS,CAAC;MAC3BM,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,CAAC,CAAC;MACpDC,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,CAAC,CAAC;MACpDE,eAAe,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,CAAC;KAC3D,CAAC;EATC;EAWHG,QAAQ;IACN;MACE,MAAMC,SAAS,GAAGC,MAAM,CAACC,OAAO,CAACC,KAAK;MACtC,IAAIH,SAAS,EAAE;QACb,IAAI,CAACI,SAAS,GAAGJ,SAAS,CAACI,SAAS;QACpCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,SAAS,CAAC,CAAC,CAAC;OAC9B,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;;;EAGzC;EACAC,UAAU;IACR,IAAIC,SAAS,GAAG,IAAI,CAACC,SAAS,CAACC,KAAK;IAEpC,IACEF,SAAS,CAACb,QAAQ,IAAI,sBAAsB,IAC5Ca,SAAS,CAACX,QAAQ,IAAI,aAAa,EACnC;MACAc,KAAK,CAAC,4BAA4B,CAAC;MACnC,IAAI,CAAClB,iBAAiB,CAACmB,UAAU,GAAGJ,SAAS;MAC7C,IAAI,CAACd,MAAM,CAACmB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;MAC9B;KACD,MAAM;MACLF,KAAK,CAAC,iCAAiC,CAAC;;EAE5C;EACAG,UAAU;IACR,MAAMC,IAAI,GAAG;MAAEX,SAAS,EAAE;IAAS,CAAE;IAErC,IAAI,CAACV,MAAM,CAACmB,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE;MACjCV,KAAK,EAAEY,IAAI,CAAE;KACd,CAAC;EACJ;;;;uBA/CWxB,sBAAsB;IAAA;EAAA;;;YAAtBA,sBAAsB;MAAAyB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCTnCC,8BAA6B;UACvBA,qBAAK;UAAAA,iBAAK;UACdA,+BAKC;UADCA;YAAA,OAAYC,gBAAY;UAAA,EAAC;UAGzBD,2BAME;UAWFA,iCAAqD;UAAAA,qBAAK;UAAAA,iBAAS;UAErEA,4BAAmB;UACjBA,wCAAuB;UAAAA,kCAA+B;UAAvBA;YAAA,OAASC,gBAAY;UAAA,EAAC;UAACD,wBAAO;UAAAA,iBAAS;UAExEA,wBAAoB;UACtBA,iBAAM;;;UA7BFA,eAAuB;UAAvBA,yCAAuB;UAuBDA,eAA8B;UAA9BA,gDAA8B","names":["FormControl","FormGroup","Validators","LoginRegisterComponent","constructor","appServiceService","router","username","required","password","confirmPassword","ngOnInit","stateData","window","history","state","pageTitle","console","log","verifyUser","formValue","loginForm","value","alert","userDetail","navigate","goToSignUp","data","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\components\\login-register\\login-register.component.ts","D:\\Angular\\Suduku_project\\Frontend\\app\\src\\app\\components\\login-register\\login-register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AppServiceService } from 'src/app/service/app-service.service';\n@Component({\n  selector: 'app-login-register',\n  templateUrl: './login-register.component.html',\n  styleUrls: ['./login-register.component.scss'],\n})\nexport class LoginRegisterComponent implements OnInit {\n  constructor(\n    private appServiceService: AppServiceService,\n    private router: Router\n  ) {}\n  loginForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  });\n  registerForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n    confirmPassword: new FormControl('', [Validators.required]),\n  });\n  pageTitle: any;\n  ngOnInit(): void {\n    {\n      const stateData = window.history.state;\n      if (stateData) {\n        this.pageTitle = stateData.pageTitle;\n        console.log(this.pageTitle); // { userId: 123, score: 50 }\n      } else {\n        console.log('No state data found.');\n      }\n    }\n  }\n  verifyUser() {\n    let formValue = this.loginForm.value;\n\n    if (\n      formValue.username == 'Karthik Devendra Rao' &&\n      formValue.password == 'Karthik@123'\n    ) {\n      alert('Login Successfully done !!');\n      this.appServiceService.userDetail = formValue;\n      this.router.navigate(['home']);\n      //this.appServiceService.loginDone.next('done');\n    } else {\n      alert('Invalid username or Password !!');\n    }\n  }\n  goToSignUp() {\n    const data = { pageTitle: 'sign-up' };\n\n    this.router.navigate(['/sign_up'], {\n      state: data, // Passing data\n    });\n  }\n}\n","<div class=\"login-container\">\n  <h2>Login</h2>\n  <form\n    [formGroup]=\"loginForm\"\n    id=\"loginForm\"\n    class=\"login-register-Form\"\n    (ngSubmit)=\"verifyUser()\"\n  >\n    <!-- <label for=\"username\">Username:</label> -->\n    <input\n      formControlName=\"username\"\n      placeholder=\"Username\"\n      type=\"text\"\n      id=\"username\"\n      required\n    />\n\n    <!-- <label for=\"password\">Password:</label> -->\n    <input\n      formControlName=\"password\"\n      placeholder=\"Password\"\n      type=\"password\"\n      id=\"password\"\n      required\n    />\n\n    <button type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\n  </form>\n  <p class=\"sign_up\">\n    Don't have an account? <button (click)=\"goToSignUp()\">Sign up</button>\n  </p>\n  <p id=\"message\"></p>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}